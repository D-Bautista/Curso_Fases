# Modelo de C. L. Kane and E. J. Mele

Este modelo buscaba conseguir un efecto Hall cuántico usando el espín en grafeno. El modelo se propuso en 2005, casi a la par del descubrimiento del grafeno. En su artículo, Kane y Mele fueron los primeros en hacer mención de efectos topológicos.

El Hamiltoniano de est sistema es $$\begin{equation} 
\mathcal{H} = \sum_{\langle i j \rangle \alpha}
\end{equation} t c_{i\alpha}^{\dagger}c_{j\alpha} + \sum_{\langle \langle i j \rangle \rangle \alpha \beta} it_{2}\nu_{ij} s^{z}_{\alpha \beta} c_{i\alpha}^{\dagger}c_{j \beta}.$$ 

El término de espín se construye para cada hopping usando $i(\mathbf{d}_{1}\times \mathbf{d}_{2}) \cdot \mathbf{s}.$ Esto arroja que los sitios con vectores de decorado salientes tengan fases $e^{i\phi}S$ con $\phi = \pi/2$ y $e^{-i\phi}S$ para sitios con vectores entrantes. Este término se reduce al término $\nu_{ij}$ que toma valores de $1$ y $-1$ según la orientación.

```{python}
from pylab import *
from pythtb import *
```

```{python}
plt.rcParams['figure.figsize'] = (3,3)
```

```{python}
a = 1.42
a1 = (a/2) * array([sqrt(3),3])
a2 = (a/2) * array([-sqrt(3),3])
lat = [a1,a2]
sitioAup = array([0,0])
sitioBup = array([1/3,1/3])
sitioAdown = array([0,0])
sitioBdown = array([1/3,1/3])

orb = [sitioAup,sitioBup,sitioAdown,sitioBdown]

KaneMele = tb_model(2,2,lat,orb)

t = 1

KaneMele.set_hop(-t,0,1,[0,0])
KaneMele.set_hop(-t,0,1,[-1,0])
KaneMele.set_hop(-t,0,1,[0,-1])

KaneMele.set_hop(-t,2,3,[0,0])
KaneMele.set_hop(-t,2,3,[-1,0])
KaneMele.set_hop(-t,2,3,[0,-1])

t2 = 0.06*t
phi = pi/2

# Sitio A spin up
KaneMele.set_hop(t2*exp(1J * phi),0,0,[1,0])
KaneMele.set_hop(t2*exp(-1J * phi),0,0,[0,1])
KaneMele.set_hop(t2*exp(1J * phi),0,0,[-1,1])

# Sitio A spin down
KaneMele.set_hop(t2*exp(-1J * phi),2,2,[1,0])
KaneMele.set_hop(t2*exp(1J * phi),2,2,[0,1])
KaneMele.set_hop(t2*exp(-1J * phi),2,2,[-1,1])

# Sitio B spin up
KaneMele.set_hop(t2*exp(-1J * phi),1,1,[1,0])
KaneMele.set_hop(t2*exp(1J * phi),1,1,[0,1])
KaneMele.set_hop(t2*exp(-1J * phi),1,1,[-1,1])

# Sitio B spin down
KaneMele.set_hop(t2*exp(1J * phi),3,3,[1,0])
KaneMele.set_hop(t2*exp(-1J * phi),3,3,[0,1])
KaneMele.set_hop(t2*exp(1J * phi),3,3,[-1,1])

```

```{python}
KaneMele.visualize(0,1)
```

```{python}
caminok = [[0,0],[1/2,0],[2/3,1/3],[0,0]]
kvec,kdist,knode = KaneMele.k_path(caminok,101,report = False)
Ek = KaneMele.solve_all(kvec)
```

```{python}
plot(kdist,Ek[0]);
plot(kdist,Ek[1], ls = ':');
plot(kdist,Ek[2]);
plot(kdist,Ek[3], ls = ':');
```

```{python}
sc = KaneMele.make_supercell([[1,0],[-1,2]])
ribbons = sc.cut_piece(10,1)

ribbons.visualize(0,1)
```

```{python}
k = linspace(0,1,100)
Ek = ribbons.solve_all(k)

plot(k,Ek.T, c = 'k', lw = 0.5, alpha = 0.6);
scatter(k[56],Ek[len(Ek)//2 - 1][56])
```


