[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Notas del Curso de Fases Topológicas del PCF 2024",
    "section": "",
    "text": "1 Índice\n\n\n\nBienvenidos al curso",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Índice</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "En este libro se expondrán las notas asociadas al curso de Fases Geométricas impartido en el Posgrado de Ciencias Físicas de la UNAM por el Dr. Alberto Martín, el Dr. Eduardo Barrios y el Dr. Luis Urrutia.\nAquí se muestran las notas relacionadas a la parte de programación.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Resumen",
    "section": "",
    "text": "Los temas vistos son\n\nEscribiendo un Hamiltoniano de amarre fuerte en Python\n\nsub-item 1\nsub-item 2\n\nsub-sub-item 1",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Resumen</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "clase1.html",
    "href": "clase1.html",
    "title": "4  Un breve repaso de Python",
    "section": "",
    "text": "En Python podemos definir varios tipos de número. Podemos, por ejemplo, escribi un número entero.\n\n# Un número entero\n4\n\n4\n\n\nTambién podemos definir números reales. Esto se puede hacer en forma decimal o en fracción.\n\n# Un número real decimal\n1.2\n\n1.2\n\n\n\n# Un número real como fracción\n1/5\n\n0.2\n\n\nAl escribir la fracción notamos que el resultado es un número real. Sin embargo, sabemos que es posible definir la divisón de modo que el resultado sea entero. Esto se logra como sigue:\n\n# División para números enteros\n2 // 3\n\n0\n\n\nEn python se pueden hacer todas las operaciones entre números.\n\n# Resta\n1 - 2\n\n-1\n\n\n\n#Producto\n1 * 2\n\n2\n\n\nLas funciones en Python se evaluan usando paréntesis. Por ejemplo, debajo se muestra la función que hace del resultado de una operación un entero.\n\n# Ejemplo de uso de la función int\nint(3 + 1/2)\n\n3\n\n\nTambién podemos definir números complejos. Estos se logran escribiendo algo de la forma \\(a + bJ\\). Debajo se muestra un ejemplo. Cabe resaltar es importante no dejar ni un espacio entre el número y J.\n\n# Número Complejo \n1 + 2J\n\n(1+2j)\n\n\nCualquiera de estos números puede almacenarse en una variable. Por ejemplo,\n\n# Almacenando un número en una variable \nvariable = 1 + 2J\n\nPodemos aplicar una función directamente sobre una variable. Antes de ejemplificar esto, cargaremos las librerías que nos permiten hacer operaciones más complejas e introducir objetos matemáticos como vectores o matrices. Las librerías se importan debajo\n\n# Se cargan las librerías que hacen python numérico\nfrom pylab import *\n\nPor ejemplo, aplicamos la función de conjugar:\n\n# Operación conjugación \nconj(variable)\n\n(1-2j)\n\n\nUn vector se define a través de entradas ordenadas. Por ejemplo, el vector \\((1,0,0)^{\\text{T}}\\) se define como sigue\n\n# Definición de vector\narray([1,0,0])\n\narray([1, 0, 0])\n\n\nEs importante usar la función array. De lo contrario, es imposible aplicar las operaciones conocidas sobre vectores.\nOJO: Por defecto los vectores en Python son vectores renglón. También podemos guardar los vectores en variables.\n\n# Almacenando dos vectores en variables\nv = array([1,2,3])\nw = array([4,5,6])\n\nGracias a que usé array a la hora de definir estos objetos, puedo sumarlos y restarlos como vectores:\n\n# Suma de vectores\nv + w\n\narray([5, 7, 9])\n\n\n\n# Resta de vectores\nv - w\n\narray([-3, -3, -3])\n\n\nNotemos que el resultado también es un array. En general, podemos comprobar que tipo de variable es un objeto usando la función type. En este caso,\n\n# Ejemplo de función type \ntype( v )\n\nnumpy.ndarray\n\n\n\n# Ejemplo de función type \ntype(variable)\n\ncomplex\n\n\nOtra operación importante es el producto punto. Esto se hace con la función dot().\n\n# Ejemplo de proucto punto\ndot( v,w )\n\n32\n\n\nEn mecánica cuántica, sin embargo, no se usa el producto cartesiano usual. Se suele hacer el producto de un bra y un ket. Esto se hace con la función vdot. En el caso de vectores reales, dot y vdot son equivalentes.\n\n# Ejemplo de vdot\nvdot( v, w )\n\n32\n\n\nTambién, podemos extrar la entrada de una posición del vector. Pero hay que tener en cuenta que Python empieza a enumerar en cero.\n\n# Extraemos la primera entrada\nv[0]\n\n1\n\n\n\n# Extraemos la segunda entrada\nv[1]\n\n2\n\n\nPara definir una matriz, se usan corchetes dentro de corchetes. Cada corchete dentro del corchete representa un renglón. Por ejemplo, para constuir la matriz \\[\\begin{pmatrix} 1 & 2 & 3 \\\\\n4 & 5 & 6 \\\\\n7 & 8 & 9\\end{pmatrix},\\] usamos\n\n# Definir una matriz con array\nA = array([[1,2,3],[4,5,6],[7,8,9]])\n\nTambién se puede usar la función matrix.\n\n# Definir una matriz con array\nB = matrix([[1,2,3],[4,5,6],[7,8,9]])\n\nPara obtener la transpuesta de una matriz \\(M\\) usamos \\(M.T\\). Esto sirve para ambas formas de definir una matriz .\n\n# Definir una matriz con array\nA.T\n\narray([[1, 4, 7],\n       [2, 5, 8],\n       [3, 6, 9]])\n\n\n\n# Definir una matriz con array\nB.T\n\nmatrix([[1, 4, 7],\n        [2, 5, 8],\n        [3, 6, 9]])\n\n\nPodemos transponer y conjugar también. En el caso de la definición de array, debemos hacer lo siguiente\n\n# Transponer y conjugar un array\nconj( A.T )\n\narray([[1, 4, 7],\n       [2, 5, 8],\n       [3, 6, 9]])\n\n\nPara el objeto matrix, se puede usar \\(M.H\\). Esto se muestra debajo,\n\n# Operador daga en una matriz\nB.H\n\nmatrix([[1, 4, 7],\n        [2, 5, 8],\n        [3, 6, 9]])\n\n\nPodemos obtener el primer renglón de una matriz de la misma forma que se extraía el primer elemento de un vector. Esto funciona tanto para la definición array como la definición matrix.\n\n# Obtener un renglón de un array\nA[0]\n\narray([1, 2, 3])\n\n\n\n# Obtener un renglón de una matriz\nB[0]\n\nmatrix([[1, 2, 3]])\n\n\nHay una sutil diferencia en el tipo de objeto de salida. En el primer caso la salida es un vector, en el segundo la salida es una matriz hecha por un sólo renglón. Aparte de type, puedo usar la función shape para saber que tengo.\n\n# Uso de función shape\nshape(A[0])\n\n(3,)\n\n\n\n# Uso de función shape\nshape(B[0])\n\n(1, 3)\n\n\nTambién, podemos extraer la primera columna. En el caso de la definición array, esto se hace como sigue:\n\n# Uso de función shape\nA.T[0]\n\narray([1, 4, 7])\n\n\nPara la definición matrix, se usa lo mismo.\n\n# Uso de función shape\nB.T[0]\n\nmatrix([[1, 4, 7]])\n\n\nDe forma alternativa, podría usar lo siguiente para el caso de matrix:\n\n# Uso de función shape\nB[:,0]\n\nmatrix([[1],\n        [4],\n        [7]])\n\n\nNotemos que esta salida si se asemeja a un vector columna.\nTambién podemos definir funciones usando def nombredefunción(variables). Al final, se añaden dos puntos. Por ejemplo,\n\n# Definiendo una función\ndef nombre(x):\n    # Dentro de una función pueden dejarse comentarios.\n    # Es usual dejar instrucciones de cálculo.\n    v = array([x,x,x])\n    return 2 * v\n\nLa función se aplica como cualquier otra.\n\n# Usando la función\nnombre(2)\n\narray([4, 4, 4])\n\n\n\n# Usando la función en otro objeto posible\nnombre( array([4,6]) )\n\narray([[ 8, 12],\n       [ 8, 12],\n       [ 8, 12]])\n\n\nSiempre es mejor pensar en funciones que reciben argumentos a la hora de tratar problemas.\nFinalmente, veamos ciclos de instrucciones. El primero es el ciclo for. Este ciclo recorre una colección de datos:\n\n# Ejempo ciclo for\ncolección = array([6,7,8])\n\nfor v in colección:\n    print(v)\n\n6\n7\n8\n\n\nEl último for puede reducirse a una sola linea.\n\n# for en una linea\n[print(v) for v in colección]\n\n6\n7\n8\n\n\n[None, None, None]\n\n\nLa colección puede ser una matriz.\n\n# for en una linea\nfor v in A:\n    print(v)\n\n[1 2 3]\n[4 5 6]\n[7 8 9]\n\n\nTambién puedo sacar los eigenvalores de una matriz. Si mi matriz es una matriz cualquiera, uso eigvals. Si mi matriz es hermítica, puedo usar eigvalsh.\n\n# Eigvals regresa los eigenvalores de una matriz sin ordenar. \neigvals(A)\n\narray([ 1.61168440e+01, -1.11684397e+00, -8.58274334e-16])",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Un breve repaso de Python</span>"
    ]
  },
  {
    "objectID": "clase2.html",
    "href": "clase2.html",
    "title": "5  Hamiltinianos de amarre fuerte en Python",
    "section": "",
    "text": "5.1 Descripción de un sistema de tres átomos\nDe esta forma, para un sistema de tres átomos que forman una cadena finita, por ejemplo, el estado de vacío es \\[| \\Omega \\rangle = | 0,0,0\\rangle\\] de modo que el operador \\(\\hat{c}^{\\dagger}_{1}\\) es tal que \\[ \\hat{c}^{\\dagger}_{0} |\\Omega \\rangle = |1,0,0\\rangle := |0 \\rangle,\\] \\[ \\hat{c}^{\\dagger}_{1} |\\Omega \\rangle = |0,1,0\\rangle := |1 \\rangle,\\] \\[ \\hat{c}^{\\dagger}_{2} |\\Omega \\rangle = |0,0,1\\rangle := |2 \\rangle.\\] Con esta notación, podemos escribir los términos asociados a energías de sitio como \\[\\hat{c}^{\\dagger}_{i} \\hat{c}_{i} = |i\\rangle \\langle i |,\\] y los términos asociados a hoppings como \\[\\hat{c}^{\\dagger}_{i} \\hat{c}_{j} = |i\\rangle \\langle j |.\\] Dicho eso, el Hamiltoniano de amarre fuerte se escribe \\[\\hat{H} = t \\hat{c}^{\\dagger}_{1} \\hat{c}_{0} + \\text{h.c.} + t \\hat{c}^{\\dagger}_{2} \\hat{c}_{1} + \\text{h.c.} = t \\hat{c}^{\\dagger}_{1} \\hat{c}_{0} + t \\hat{c}^{\\dagger}_{2} \\hat{c}_{1} + \\text{h.c.}.\\]\nAhora llevemos esto a Python, primero importamos las librerías.\nfrom pylab import *\nPodemos representar los distintos kets como vectores. Por ejemplo, para representar \\(|0 \\rangle = |1,0,0\\rangle\\) usamos la siguiente celda.\nket_cero = np.matrix([[1],[0],[0]])\nprint(ket_cero)\n\n[[1]\n [0]\n [0]]\nHacemos lo mismo para representar \\(|1 \\rangle = |0,1,0\\rangle\\), pero ahora hay que escribir un vector renglón.\nbra_uno = np.matrix([[0,1,0]])\nprint(bra_uno)\n\n[[0 1 0]]\nYa una vez definidos los estados, creamos el operador con el producto \\(|0\\rangle \\langle 1 |\\). Esto se hace con el producto de matrices. Para objetos del tipo matrix, esto se consigue con el símbolo *:\nket_cero * bra_uno\n\nmatrix([[0, 1, 0],\n        [0, 0, 0],\n        [0, 0, 0]])\nPodemos constuir el conjugado. Para ello definimos los conjugados de los bras y kets definidos y hacemos el producto matricial entre ellos. Vemos que en efecto el resultado es la matriz hermítica a la obtenida previamente.\nket_uno = np.matrix([[0],[1],[0]])\nbra_cero = np.matrix([[1,0,0]])\n\nket_uno * bra_cero\n\nmatrix([[0, 0, 0],\n        [1, 0, 0],\n        [0, 0, 0]])\nTerminamos de definir el resto de los estados.\nket_dos = np.matrix([[0],[0],[1]])\nbra_uno = np.matrix([[0,1,0]])\n\nket_dos * bra_uno\n\nmatrix([[0, 0, 0],\n        [0, 0, 0],\n        [0, 1, 0]])\nket_uno = np.matrix([[0],[1],[0]])\nbra_dos = np.matrix([[0,0,1]])\n\nket_uno * bra_dos\n\nmatrix([[0, 0, 0],\n        [0, 0, 1],\n        [0, 0, 0]])\nYa con todos los estaods definidos, podemos construir nuestro hamiltoniano de amarre fuerte. \\[\\hat{H} = t |0 \\rangle \\langle 1| + t^{*}|1 \\rangle \\langle 0| + t|1 \\rangle \\langle 2| + t^{*}|2 \\rangle \\langle 1|\\] Se definirán todos los estados de nuevo por completez, pero esto no es necesario.\nket_cero = np.matrix([[1],[0],[0]])\nket_uno  = np.matrix([[0],[1],[0]])\nket_dos  = np.matrix([[0],[0],[1]])\nbra_cero = np.matrix([[1,0,0]])\nbra_uno  = np.matrix([[0,1,0]])\nbra_dos  = np.matrix([[0,0,1]])\n\n#definimos el hopping\n\nt = 1.0\ntc = conj(t)\n\nH = t*ket_cero*bra_uno + tc*ket_uno*bra_cero \\\n  + t*ket_dos*bra_uno + tc*ket_uno*bra_dos\n\nprint(H)\n\n[[0. 1. 0.]\n [1. 0. 1.]\n [0. 1. 0.]]\nDe este operador, podemos sacar los eigenvalores y eigenvectores.\nE,U = eigh(H)\nLos eigenvalores se almacenan en E, los eigenvectores en U:\nprint(E)\n\n[-1.41421356e+00 -2.14901599e-17  1.41421356e+00]\nprint(U)\n\n[[-5.00000000e-01  7.07106781e-01  5.00000000e-01]\n [ 7.07106781e-01 -7.62399522e-17  7.07106781e-01]\n [-5.00000000e-01 -7.07106781e-01  5.00000000e-01]]\nNotamos que en U están los eigenvectores como columnas. Para ver eso, hacemos el producto de H con la primer columna y dividimos por el eigenvalor. El resultado es el vector original:\nv = np.matrix([[-5.00000000e-01],[7.07106781e-01],[-5.00000000e-01]])\n\nprint(H*v/-1.41421356e+00)\n\n[[-0.5       ]\n [ 0.70710678]\n [-0.5       ]]\nExtraemos un eigenvalor y su eigenvalor asociado. Para ello, hay que tener cuidado de trasponer la matriz antes de extraer el vector.\nE0 = E[0]\nv0 = (U.T[0]).T\nprint(v0)\n\n[[-0.5       ]\n [ 0.70710678]\n [-0.5       ]]\nPara detalles técnicos, hacemos lo mismo pero usando array en vez de matrix.\nket_uno  = np.array([[0],[1],[0]])\nbra_cero = np.array([[1,0,0]]) \n\nprint(ket_uno)\nprint(bra_cero)\n\n[[0]\n [1]\n [0]]\n[[1 0 0]]\nHasta ahora todo se ve igual. Lo mismo pasa al hacer el producto.\nket_cero = np.array([[1],[0],[0]])\nket_uno  = np.array([[0],[1],[0]])\nket_dos  = np.array([[0],[0],[1]])\nbra_cero = np.array([[1,0,0]]) \nbra_uno  = np.array([[0,1,0]])\nbra_dos  = np.array([[0,0,1]])\n\nt = 1.0\ntc = conj(t)\n\nH = t*ket_cero*bra_uno + tc*ket_uno*bra_cero \\\n  + t*ket_dos*bra_uno + tc*ket_uno*bra_dos\n\nprint(H)\n\n[[0. 1. 0.]\n [1. 0. 1.]\n [0. 1. 0.]]\nLos eigenvectores y eigenvalores se sacan de la misma forma.\nE,U = eigh(H)\nprint(E)\nprint(U)\n\n[-1.41421356e+00 -2.14901599e-17  1.41421356e+00]\n[[-5.00000000e-01  7.07106781e-01  5.00000000e-01]\n [ 7.07106781e-01 -7.62399522e-17  7.07106781e-01]\n [-5.00000000e-01 -7.07106781e-01  5.00000000e-01]]\nEn conclusión: Usar array o matrix da la misma descripción para nuestros fines.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Hamiltinianos de amarre fuerte en Python</span>"
    ]
  },
  {
    "objectID": "clase2.html#descripción-de-un-triángulo",
    "href": "clase2.html#descripción-de-un-triángulo",
    "title": "5  Hamiltinianos de amarre fuerte en Python",
    "section": "5.2 Descripción de un triángulo",
    "text": "5.2 Descripción de un triángulo\nAhora supongamos que los átomos se ordenan en un triángulo. Esto implica que al Hamiltoniano se le añade una interacción entre el sitio \\(|0\\rangle\\) y el \\(|2\\rangle\\). En este caso, el hamiltoniano de amarre fuerte es \\[\\hat{H} = t \\hat{c}^{\\dagger}_{1} \\hat{c}_{0} + t \\hat{c}^{\\dagger}_{2} \\hat{c}_{1} + t \\hat{c}^{\\dagger}_{0} \\hat{c}_{2} + \\text{h.c.}.\\]\nEscribimos este hamiltoniano en código.\n\nket_cero = np.array([[1],[0],[0]])\nket_uno  = np.array([[0],[1],[0]])\nket_dos  = np.array([[0],[0],[1]])\nbra_cero = np.array([[1,0,0]]) \nbra_uno  = np.array([[0,1,0]])\nbra_dos  = np.array([[0,0,1]])\n\nt = 1.0\ntc = conj(t)\n\nH = t*ket_cero*bra_uno + tc*ket_uno*bra_cero \\\n  + t*ket_uno*bra_dos + tc*ket_dos*bra_uno   \\\n  + t*ket_cero*bra_dos + tc*ket_dos*bra_cero\n\nprint(H)\n\n[[0. 1. 1.]\n [1. 0. 1.]\n [1. 1. 0.]]\n\n\nPara este caso, hay una degeneración de los eigenvalores.\n\neigvalsh(H)\n\narray([-1., -1.,  2.])\n\n\n¿A qué se debe la simetría? A que en este caso el sistema tiene una simetría \\(C_{3}\\). El operador asociado a esa simetría en la base de orbitales localizados se ve como una permutación. \\[R = \\begin{pmatrix} 0 & 0 & 1 \\\\\n1 & 0 & 0 \\\\\n0 & 1 & 0 \\end{pmatrix}.\\] Corroboramos que esta matriz conmuta con el hamiltoniano. Para ello, definimos la matriz debajo\n\nR = np.matrix([[0,0,1],[1,0,0],[0,1,0]])\nprint(R)\n\n[[0 0 1]\n [1 0 0]\n [0 1 0]]\n\n\nLuego, aplicamos el conmutador\n\nprint(H * R - R * H)\n\n[[0. 0. 0.]\n [0. 0. 0.]\n [0. 0. 0.]]\n\n\nNOTA: Para calcular el conmutador se usó el objeto matrix. Esto se debe a que a la hora de calcular productos de matrices de misma dimensión, la operación “” se convierte en un producto entrada a entrada para objetos tipo array. Para objetos tipo matrix, ”” siempre denota producto matricial.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Hamiltinianos de amarre fuerte en Python</span>"
    ]
  },
  {
    "objectID": "clase2.html#hamiltoniano-de-amarre-fuerte-de-un-cristal",
    "href": "clase2.html#hamiltoniano-de-amarre-fuerte-de-un-cristal",
    "title": "5  IHamiltinianos de amarre fuerte en Python",
    "section": "5.3 Hamiltoniano de amarre fuerte de un cristal",
    "text": "5.3 Hamiltoniano de amarre fuerte de un cristal",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>IHamiltinianos de amarre fuerte en Python</span>"
    ]
  },
  {
    "objectID": "clase3.html",
    "href": "clase3.html",
    "title": "6  Introducción a Python Tight-Binding",
    "section": "",
    "text": "6.1 Hamiltoniano de amarre fuerte de un cristal cuadrado con campo magnético\nBuscamos describir una red cuadrada sobre la que actúa un campo magnético. Una red se define mediante dos vectores base \\(\\vec{a}_{1},\\vec{a}_{2}\\). Explítamente, una red es igual al conjunto de puntos de la forma \\[\\vec{R} = n_{1} \\vec{a}_{1} + n_{2}\\vec{a}_{2},\\] donde \\(n_{i} \\in \\mathbb{Z}\\). Imaginamos que sobre cada punto de la red hay un orbital. A cada enlace entre dos órbitales le asociamos un hopping \\(t\\). Usualmente, sólo damos hoppings no nulos a los vecinos cercanos.\nPythTB nos permite implementar cada uno de estos ingredientes en un código.\nfrom pylab import *\nfrom pythtb import *\nPrimero, definimos los vectores base y los guardamos dentro de la variable vectoresRed. Posteriormente, definimos el sitio de los orbitales de nuestra red. La posición de los orbitales debe ser una combinación lineal de los vectores base. En este caso, para poner el orbital sobre los puntos de red la posición del orbital debe ser \\(\\vec{S} = 0 \\cdot\\vec{a}_{1} + 0\\cdot\\vec{a}_{2}\\). Guardamos la posición del orbital en la variable sitio. Usualmente, habrá más de un órbital. Luego de definir la posición de todos los orbitales, debemos guardar sus posiciones en un nuevo array. En este modelo, sólo hay un orbital, pero lo guardamos en una lista llamada orbitales aparte para prepararnos al caso en que haya más orbitales.\nYa con esto listo podemos definir un objeto tb_model. La entrada a este modelo son la dimensión del espacio k, la dimensión del espacio r, los vectores de red y la lista con la posición de los orbitales. Ya hecho el modelo, podemos añadir hoppings. Para ello se usa el método set_hop. Este método recibe el valor del hopping, el índice del primer orbital del enalce (en este caso sólo hay un orbital cuyo índice es \\(i = 0\\)), el índice del segundo orbital en el enlace y el vector de red que apunta a la celda del segundo orbital.\nPara ver que los hoppings se hayan puesto bien usamos el método visualize sobre nuestro modelo. La entrada de este método es sobre que vectores base se hará la visualización. En este caso sólo hay dos vectores y por ello ponemos \\((0,1)\\).\nNotamos que por default pythtb añade los hoppings conjugados.\na1  = array([1,0])\na2  = array([0,1])\n\nvectoresRed = array([a1,a2]) #0*a1 + 0*a2\n\nsitio = array([1/2,1/2]) #Sitio del orbital\n\norbitales = array([sitio]) #Lista con todos los itios. \n\n# Definimos el Hamiltoniano de amarre fuerte.\ncuadrada = tb_model(2,2, vectoresRed, orbitales)\n\n#Definimos los hoppings.\nt = 1\ncuadrada.set_hop(t,0,0,[1,0])\n# Enlace entre orbital 0 y orbital 0 desplazo por 1*a1 + 0*a2\ncuadrada.set_hop(t,0,0,[0,1])\n# Enlace entre orbital 0 y orbital 0 desplazo por 0*a1 + 1*a2\n\ncuadrada.visualize(0,1)\n# (0,1) significa en la dirección de a1 y a2.\nTambién podemos crear superceldas, i.e., repeticiones de una celda unitaria. Para ello usamos la función make_supercell. La entrada de la celda es la modificación sobre los vectores de red.\ncuadrada_grande = cuadrada.make_supercell([[10,2],[0,10]])\n# [10,0] significa que el nuevo vector 1 es 10*a1 + 0*a2\n# [0,10] significa que el nuevo vector 2 es 0*a1 + 10*a2\n\ncuadrada_grande.visualize(0,1)\nDe la supercelda podemos cortar y hacer finita la celda en una dimensión. La entrada del vector Para ello usamos cut_piece.\ncuadrada_cortada = cuadrada_grande.cut_piece(2,1)\n# El (1,0) es cortar 1 vez en el vector a1. En a2 sigue siemdo finito. \ncuadrada_cortada.visualize(0,1)\nSi aplicamos cut_piece dos veces podemos obtener un sistema finito.\ncuadrada_cortada_cortada = cuadrada_cortada.cut_piece(1,0)\n# El (0,2) es cortar 2 vez en el vector a1. En a2 sigue siemdo finito. \ncuadrada_cortada_cortada.visualize(0,1)\nA este sistema finito podemos extraerle los eigenvalores usando solve_all.\neigenvalores = cuadrada_cortada_cortada.solve_all()\nprint(eigenvalores)\n\n[-3.92005278e+00 -3.82835584e+00 -3.73798627e+00 -3.71159706e+00\n -3.59339675e+00 -3.57760028e+00 -3.50780890e+00 -3.39972248e+00\n -3.34931497e+00 -3.31922646e+00 -3.22924233e+00 -3.20570284e+00\n -3.13024135e+00 -3.10086602e+00 -2.98442523e+00 -2.96460568e+00\n -2.92196412e+00 -2.83389331e+00 -2.79983079e+00 -2.74954907e+00\n -2.72437437e+00 -2.67120141e+00 -2.57675904e+00 -2.55112025e+00\n -2.50719085e+00 -2.47732712e+00 -2.35105637e+00 -2.31057373e+00\n -2.27532489e+00 -2.25986643e+00 -2.24120531e+00 -2.18963834e+00\n -2.11818159e+00 -2.08500833e+00 -2.03922528e+00 -1.97433694e+00\n -1.95715611e+00 -1.93319585e+00 -1.82770021e+00 -1.80813814e+00\n -1.75409297e+00 -1.71362655e+00 -1.68861658e+00 -1.67412904e+00\n -1.62194260e+00 -1.60087784e+00 -1.59431411e+00 -1.50989105e+00\n -1.45541232e+00 -1.42320258e+00 -1.40172435e+00 -1.35884225e+00\n -1.28890309e+00 -1.28348817e+00 -1.24593461e+00 -1.16599749e+00\n -1.14671799e+00 -1.13543825e+00 -1.10738807e+00 -1.08480224e+00\n -1.07081829e+00 -1.02475178e+00 -1.00702184e+00 -9.36429702e-01\n -9.19811201e-01 -9.07683022e-01 -8.61455202e-01 -8.28072881e-01\n -7.71931905e-01 -7.42997892e-01 -7.33945334e-01 -7.00911517e-01\n -6.85313269e-01 -6.45746285e-01 -6.14329628e-01 -5.96102586e-01\n -5.65390797e-01 -5.46175072e-01 -5.05724939e-01 -4.91988040e-01\n -4.77349395e-01 -4.66942015e-01 -4.23285145e-01 -3.84221597e-01\n -3.48104041e-01 -3.39395830e-01 -2.97179001e-01 -2.92457015e-01\n -2.63663935e-01 -2.45679332e-01 -2.18286316e-01 -2.11405077e-01\n -1.80895101e-01 -1.34603691e-01 -1.29153960e-01 -1.14933579e-01\n -1.06014420e-01 -7.41505500e-02 -6.79517745e-02 -3.43460197e-02\n -2.34958746e-15 -1.03338196e-15 -6.24998797e-16 -3.89748932e-16\n -3.77574538e-16 -2.90087605e-16 -2.83938771e-16 -1.42157172e-16\n -5.82722393e-17  0.00000000e+00  0.00000000e+00  0.00000000e+00\n  0.00000000e+00  0.00000000e+00  0.00000000e+00  0.00000000e+00\n  0.00000000e+00  0.00000000e+00  6.84196278e-17  1.15309256e-16\n  3.31023900e-16  3.63349827e-16  4.63757075e-16  5.01314276e-16\n  5.36407620e-16  8.42614279e-16  3.43460197e-02  6.79517745e-02\n  7.41505500e-02  1.06014420e-01  1.14933579e-01  1.29153960e-01\n  1.34603691e-01  1.80895101e-01  2.11405077e-01  2.18286316e-01\n  2.45679332e-01  2.63663935e-01  2.92457015e-01  2.97179001e-01\n  3.39395830e-01  3.48104041e-01  3.84221597e-01  4.23285145e-01\n  4.66942015e-01  4.77349395e-01  4.91988040e-01  5.05724939e-01\n  5.46175072e-01  5.65390797e-01  5.96102586e-01  6.14329628e-01\n  6.45746285e-01  6.85313269e-01  7.00911517e-01  7.33945334e-01\n  7.42997892e-01  7.71931905e-01  8.28072881e-01  8.61455202e-01\n  9.07683022e-01  9.19811201e-01  9.36429702e-01  1.00702184e+00\n  1.02475178e+00  1.07081829e+00  1.08480224e+00  1.10738807e+00\n  1.13543825e+00  1.14671799e+00  1.16599749e+00  1.24593461e+00\n  1.28348817e+00  1.28890309e+00  1.35884225e+00  1.40172435e+00\n  1.42320258e+00  1.45541232e+00  1.50989105e+00  1.59431411e+00\n  1.60087784e+00  1.62194260e+00  1.67412904e+00  1.68861658e+00\n  1.71362655e+00  1.75409297e+00  1.80813814e+00  1.82770021e+00\n  1.93319585e+00  1.95715611e+00  1.97433694e+00  2.03922528e+00\n  2.08500833e+00  2.11818159e+00  2.18963834e+00  2.24120531e+00\n  2.25986643e+00  2.27532489e+00  2.31057373e+00  2.35105637e+00\n  2.47732712e+00  2.50719085e+00  2.55112025e+00  2.57675904e+00\n  2.67120141e+00  2.72437437e+00  2.74954907e+00  2.79983079e+00\n  2.83389331e+00  2.92196412e+00  2.96460568e+00  2.98442523e+00\n  3.10086602e+00  3.13024135e+00  3.20570284e+00  3.22924233e+00\n  3.31922646e+00  3.34931497e+00  3.39972248e+00  3.50780890e+00\n  3.57760028e+00  3.59339675e+00  3.71159706e+00  3.73798627e+00\n  3.82835584e+00  3.92005278e+00]\nOtra función útil es la función display. Esta imprime todos los hoppings, i.e., imprime el Hamiltoniano. Además, la función da más información útil.\ncuadrada_cortada_cortada.display()\n\n---------------------------------------\nreport of tight-binding model\n---------------------------------------\nk-space dimension           = 0\nr-space dimension           = 2\nnumber of spin components   = 1\nperiodic directions         = []\nnumber of orbitals          = 226\nnumber of electronic states = 226\nlattice vectors:\n #  0  ===&gt;  [    10.0 ,     2.0 ]\n #  1  ===&gt;  [     0.0 ,    10.0 ]\npositions of orbitals:\n #  0  ===&gt;  [    0.05 ,    0.04 ]\n #  1  ===&gt;  [    0.05 ,    0.14 ]\n #  2  ===&gt;  [    0.05 ,    0.24 ]\n #  3  ===&gt;  [    0.05 ,    0.34 ]\n #  4  ===&gt;  [    0.05 ,    0.44 ]\n #  5  ===&gt;  [    0.05 ,    0.54 ]\n #  6  ===&gt;  [    0.05 ,    0.64 ]\n #  7  ===&gt;  [    0.05 ,    0.74 ]\n #  8  ===&gt;  [    0.05 ,    0.84 ]\n #  9  ===&gt;  [    0.05 ,    0.94 ]\n # 10  ===&gt;  [    0.05 ,    1.04 ]\n # 11  ===&gt;  [    0.15 ,    0.12 ]\n # 12  ===&gt;  [    0.15 ,    0.22 ]\n # 13  ===&gt;  [    0.15 ,    0.32 ]\n # 14  ===&gt;  [    0.15 ,    0.42 ]\n # 15  ===&gt;  [    0.15 ,    0.52 ]\n # 16  ===&gt;  [    0.15 ,    0.62 ]\n # 17  ===&gt;  [    0.15 ,    0.72 ]\n # 18  ===&gt;  [    0.15 ,    0.82 ]\n # 19  ===&gt;  [    0.15 ,    0.92 ]\n # 20  ===&gt;  [    0.15 ,    1.02 ]\n # 21  ===&gt;  [    0.25 ,     0.1 ]\n # 22  ===&gt;  [    0.25 ,     0.2 ]\n # 23  ===&gt;  [    0.25 ,     0.3 ]\n # 24  ===&gt;  [    0.25 ,     0.4 ]\n # 25  ===&gt;  [    0.25 ,     0.5 ]\n # 26  ===&gt;  [    0.25 ,     0.6 ]\n # 27  ===&gt;  [    0.25 ,     0.7 ]\n # 28  ===&gt;  [    0.25 ,     0.8 ]\n # 29  ===&gt;  [    0.25 ,     0.9 ]\n # 30  ===&gt;  [    0.25 ,     1.0 ]\n # 31  ===&gt;  [    0.35 ,    0.08 ]\n # 32  ===&gt;  [    0.35 ,    0.18 ]\n # 33  ===&gt;  [    0.35 ,    0.28 ]\n # 34  ===&gt;  [    0.35 ,    0.38 ]\n # 35  ===&gt;  [    0.35 ,    0.48 ]\n # 36  ===&gt;  [    0.35 ,    0.58 ]\n # 37  ===&gt;  [    0.35 ,    0.68 ]\n # 38  ===&gt;  [    0.35 ,    0.78 ]\n # 39  ===&gt;  [    0.35 ,    0.88 ]\n # 40  ===&gt;  [    0.35 ,    0.98 ]\n # 41  ===&gt;  [    0.45 ,    0.06 ]\n # 42  ===&gt;  [    0.45 ,    0.16 ]\n # 43  ===&gt;  [    0.45 ,    0.26 ]\n # 44  ===&gt;  [    0.45 ,    0.36 ]\n # 45  ===&gt;  [    0.45 ,    0.46 ]\n # 46  ===&gt;  [    0.45 ,    0.56 ]\n # 47  ===&gt;  [    0.45 ,    0.66 ]\n # 48  ===&gt;  [    0.45 ,    0.76 ]\n # 49  ===&gt;  [    0.45 ,    0.86 ]\n # 50  ===&gt;  [    0.45 ,    0.96 ]\n # 51  ===&gt;  [    0.55 ,    0.04 ]\n # 52  ===&gt;  [    0.55 ,    0.14 ]\n # 53  ===&gt;  [    0.55 ,    0.24 ]\n # 54  ===&gt;  [    0.55 ,    0.34 ]\n # 55  ===&gt;  [    0.55 ,    0.44 ]\n # 56  ===&gt;  [    0.55 ,    0.54 ]\n # 57  ===&gt;  [    0.55 ,    0.64 ]\n # 58  ===&gt;  [    0.55 ,    0.74 ]\n # 59  ===&gt;  [    0.55 ,    0.84 ]\n # 60  ===&gt;  [    0.55 ,    0.94 ]\n # 61  ===&gt;  [    0.55 ,    1.04 ]\n # 62  ===&gt;  [    0.65 ,    0.12 ]\n # 63  ===&gt;  [    0.65 ,    0.22 ]\n # 64  ===&gt;  [    0.65 ,    0.32 ]\n # 65  ===&gt;  [    0.65 ,    0.42 ]\n # 66  ===&gt;  [    0.65 ,    0.52 ]\n # 67  ===&gt;  [    0.65 ,    0.62 ]\n # 68  ===&gt;  [    0.65 ,    0.72 ]\n # 69  ===&gt;  [    0.65 ,    0.82 ]\n # 70  ===&gt;  [    0.65 ,    0.92 ]\n # 71  ===&gt;  [    0.65 ,    1.02 ]\n # 72  ===&gt;  [    0.75 ,     0.1 ]\n # 73  ===&gt;  [    0.75 ,     0.2 ]\n # 74  ===&gt;  [    0.75 ,     0.3 ]\n # 75  ===&gt;  [    0.75 ,     0.4 ]\n # 76  ===&gt;  [    0.75 ,     0.5 ]\n # 77  ===&gt;  [    0.75 ,     0.6 ]\n # 78  ===&gt;  [    0.75 ,     0.7 ]\n # 79  ===&gt;  [    0.75 ,     0.8 ]\n # 80  ===&gt;  [    0.75 ,     0.9 ]\n # 81  ===&gt;  [    0.75 ,     1.0 ]\n # 82  ===&gt;  [    0.85 ,    0.08 ]\n # 83  ===&gt;  [    0.85 ,    0.18 ]\n # 84  ===&gt;  [    0.85 ,    0.28 ]\n # 85  ===&gt;  [    0.85 ,    0.38 ]\n # 86  ===&gt;  [    0.85 ,    0.48 ]\n # 87  ===&gt;  [    0.85 ,    0.58 ]\n # 88  ===&gt;  [    0.85 ,    0.68 ]\n # 89  ===&gt;  [    0.85 ,    0.78 ]\n # 90  ===&gt;  [    0.85 ,    0.88 ]\n # 91  ===&gt;  [    0.85 ,    0.98 ]\n # 92  ===&gt;  [    0.95 ,    0.06 ]\n # 93  ===&gt;  [    0.95 ,    0.16 ]\n # 94  ===&gt;  [    0.95 ,    0.26 ]\n # 95  ===&gt;  [    0.95 ,    0.36 ]\n # 96  ===&gt;  [    0.95 ,    0.46 ]\n # 97  ===&gt;  [    0.95 ,    0.56 ]\n # 98  ===&gt;  [    0.95 ,    0.66 ]\n # 99  ===&gt;  [    0.95 ,    0.76 ]\n # 100  ===&gt;  [    0.95 ,    0.86 ]\n # 101  ===&gt;  [    0.95 ,    0.96 ]\n # 102  ===&gt;  [    1.05 ,    0.04 ]\n # 103  ===&gt;  [    1.05 ,    0.14 ]\n # 104  ===&gt;  [    1.05 ,    0.24 ]\n # 105  ===&gt;  [    1.05 ,    0.34 ]\n # 106  ===&gt;  [    1.05 ,    0.44 ]\n # 107  ===&gt;  [    1.05 ,    0.54 ]\n # 108  ===&gt;  [    1.05 ,    0.64 ]\n # 109  ===&gt;  [    1.05 ,    0.74 ]\n # 110  ===&gt;  [    1.05 ,    0.84 ]\n # 111  ===&gt;  [    1.05 ,    0.94 ]\n # 112  ===&gt;  [    0.05 ,    0.04 ]\n # 113  ===&gt;  [    0.05 ,    1.04 ]\n # 114  ===&gt;  [    0.05 ,    1.14 ]\n # 115  ===&gt;  [    0.05 ,    1.24 ]\n # 116  ===&gt;  [    0.05 ,    1.34 ]\n # 117  ===&gt;  [    0.05 ,    1.44 ]\n # 118  ===&gt;  [    0.05 ,    1.54 ]\n # 119  ===&gt;  [    0.05 ,    1.64 ]\n # 120  ===&gt;  [    0.05 ,    1.74 ]\n # 121  ===&gt;  [    0.05 ,    1.84 ]\n # 122  ===&gt;  [    0.05 ,    1.94 ]\n # 123  ===&gt;  [    0.05 ,    2.04 ]\n # 124  ===&gt;  [    0.15 ,    1.12 ]\n # 125  ===&gt;  [    0.15 ,    1.22 ]\n # 126  ===&gt;  [    0.15 ,    1.32 ]\n # 127  ===&gt;  [    0.15 ,    1.42 ]\n # 128  ===&gt;  [    0.15 ,    1.52 ]\n # 129  ===&gt;  [    0.15 ,    1.62 ]\n # 130  ===&gt;  [    0.15 ,    1.72 ]\n # 131  ===&gt;  [    0.15 ,    1.82 ]\n # 132  ===&gt;  [    0.15 ,    1.92 ]\n # 133  ===&gt;  [    0.15 ,    2.02 ]\n # 134  ===&gt;  [    0.25 ,     1.1 ]\n # 135  ===&gt;  [    0.25 ,     1.2 ]\n # 136  ===&gt;  [    0.25 ,     1.3 ]\n # 137  ===&gt;  [    0.25 ,     1.4 ]\n # 138  ===&gt;  [    0.25 ,     1.5 ]\n # 139  ===&gt;  [    0.25 ,     1.6 ]\n # 140  ===&gt;  [    0.25 ,     1.7 ]\n # 141  ===&gt;  [    0.25 ,     1.8 ]\n # 142  ===&gt;  [    0.25 ,     1.9 ]\n # 143  ===&gt;  [    0.25 ,     2.0 ]\n # 144  ===&gt;  [    0.35 ,    1.08 ]\n # 145  ===&gt;  [    0.35 ,    1.18 ]\n # 146  ===&gt;  [    0.35 ,    1.28 ]\n # 147  ===&gt;  [    0.35 ,    1.38 ]\n # 148  ===&gt;  [    0.35 ,    1.48 ]\n # 149  ===&gt;  [    0.35 ,    1.58 ]\n # 150  ===&gt;  [    0.35 ,    1.68 ]\n # 151  ===&gt;  [    0.35 ,    1.78 ]\n # 152  ===&gt;  [    0.35 ,    1.88 ]\n # 153  ===&gt;  [    0.35 ,    1.98 ]\n # 154  ===&gt;  [    0.45 ,    1.06 ]\n # 155  ===&gt;  [    0.45 ,    1.16 ]\n # 156  ===&gt;  [    0.45 ,    1.26 ]\n # 157  ===&gt;  [    0.45 ,    1.36 ]\n # 158  ===&gt;  [    0.45 ,    1.46 ]\n # 159  ===&gt;  [    0.45 ,    1.56 ]\n # 160  ===&gt;  [    0.45 ,    1.66 ]\n # 161  ===&gt;  [    0.45 ,    1.76 ]\n # 162  ===&gt;  [    0.45 ,    1.86 ]\n # 163  ===&gt;  [    0.45 ,    1.96 ]\n # 164  ===&gt;  [    0.55 ,    1.04 ]\n # 165  ===&gt;  [    0.55 ,    1.14 ]\n # 166  ===&gt;  [    0.55 ,    1.24 ]\n # 167  ===&gt;  [    0.55 ,    1.34 ]\n # 168  ===&gt;  [    0.55 ,    1.44 ]\n # 169  ===&gt;  [    0.55 ,    1.54 ]\n # 170  ===&gt;  [    0.55 ,    1.64 ]\n # 171  ===&gt;  [    0.55 ,    1.74 ]\n # 172  ===&gt;  [    0.55 ,    1.84 ]\n # 173  ===&gt;  [    0.55 ,    1.94 ]\n # 174  ===&gt;  [    0.55 ,    2.04 ]\n # 175  ===&gt;  [    0.65 ,    1.12 ]\n # 176  ===&gt;  [    0.65 ,    1.22 ]\n # 177  ===&gt;  [    0.65 ,    1.32 ]\n # 178  ===&gt;  [    0.65 ,    1.42 ]\n # 179  ===&gt;  [    0.65 ,    1.52 ]\n # 180  ===&gt;  [    0.65 ,    1.62 ]\n # 181  ===&gt;  [    0.65 ,    1.72 ]\n # 182  ===&gt;  [    0.65 ,    1.82 ]\n # 183  ===&gt;  [    0.65 ,    1.92 ]\n # 184  ===&gt;  [    0.65 ,    2.02 ]\n # 185  ===&gt;  [    0.75 ,     1.1 ]\n # 186  ===&gt;  [    0.75 ,     1.2 ]\n # 187  ===&gt;  [    0.75 ,     1.3 ]\n # 188  ===&gt;  [    0.75 ,     1.4 ]\n # 189  ===&gt;  [    0.75 ,     1.5 ]\n # 190  ===&gt;  [    0.75 ,     1.6 ]\n # 191  ===&gt;  [    0.75 ,     1.7 ]\n # 192  ===&gt;  [    0.75 ,     1.8 ]\n # 193  ===&gt;  [    0.75 ,     1.9 ]\n # 194  ===&gt;  [    0.75 ,     2.0 ]\n # 195  ===&gt;  [    0.85 ,    1.08 ]\n # 196  ===&gt;  [    0.85 ,    1.18 ]\n # 197  ===&gt;  [    0.85 ,    1.28 ]\n # 198  ===&gt;  [    0.85 ,    1.38 ]\n # 199  ===&gt;  [    0.85 ,    1.48 ]\n # 200  ===&gt;  [    0.85 ,    1.58 ]\n # 201  ===&gt;  [    0.85 ,    1.68 ]\n # 202  ===&gt;  [    0.85 ,    1.78 ]\n # 203  ===&gt;  [    0.85 ,    1.88 ]\n # 204  ===&gt;  [    0.85 ,    1.98 ]\n # 205  ===&gt;  [    0.95 ,    1.06 ]\n # 206  ===&gt;  [    0.95 ,    1.16 ]\n # 207  ===&gt;  [    0.95 ,    1.26 ]\n # 208  ===&gt;  [    0.95 ,    1.36 ]\n # 209  ===&gt;  [    0.95 ,    1.46 ]\n # 210  ===&gt;  [    0.95 ,    1.56 ]\n # 211  ===&gt;  [    0.95 ,    1.66 ]\n # 212  ===&gt;  [    0.95 ,    1.76 ]\n # 213  ===&gt;  [    0.95 ,    1.86 ]\n # 214  ===&gt;  [    0.95 ,    1.96 ]\n # 215  ===&gt;  [    1.05 ,    1.04 ]\n # 216  ===&gt;  [    1.05 ,    1.14 ]\n # 217  ===&gt;  [    1.05 ,    1.24 ]\n # 218  ===&gt;  [    1.05 ,    1.34 ]\n # 219  ===&gt;  [    1.05 ,    1.44 ]\n # 220  ===&gt;  [    1.05 ,    1.54 ]\n # 221  ===&gt;  [    1.05 ,    1.64 ]\n # 222  ===&gt;  [    1.05 ,    1.74 ]\n # 223  ===&gt;  [    1.05 ,    1.84 ]\n # 224  ===&gt;  [    1.05 ,    1.94 ]\n # 225  ===&gt;  [    0.05 ,    1.04 ]\nsite energies:\n #  0  ===&gt;       0.0\n #  1  ===&gt;       0.0\n #  2  ===&gt;       0.0\n #  3  ===&gt;       0.0\n #  4  ===&gt;       0.0\n #  5  ===&gt;       0.0\n #  6  ===&gt;       0.0\n #  7  ===&gt;       0.0\n #  8  ===&gt;       0.0\n #  9  ===&gt;       0.0\n # 10  ===&gt;       0.0\n # 11  ===&gt;       0.0\n # 12  ===&gt;       0.0\n # 13  ===&gt;       0.0\n # 14  ===&gt;       0.0\n # 15  ===&gt;       0.0\n # 16  ===&gt;       0.0\n # 17  ===&gt;       0.0\n # 18  ===&gt;       0.0\n # 19  ===&gt;       0.0\n # 20  ===&gt;       0.0\n # 21  ===&gt;       0.0\n # 22  ===&gt;       0.0\n # 23  ===&gt;       0.0\n # 24  ===&gt;       0.0\n # 25  ===&gt;       0.0\n # 26  ===&gt;       0.0\n # 27  ===&gt;       0.0\n # 28  ===&gt;       0.0\n # 29  ===&gt;       0.0\n # 30  ===&gt;       0.0\n # 31  ===&gt;       0.0\n # 32  ===&gt;       0.0\n # 33  ===&gt;       0.0\n # 34  ===&gt;       0.0\n # 35  ===&gt;       0.0\n # 36  ===&gt;       0.0\n # 37  ===&gt;       0.0\n # 38  ===&gt;       0.0\n # 39  ===&gt;       0.0\n # 40  ===&gt;       0.0\n # 41  ===&gt;       0.0\n # 42  ===&gt;       0.0\n # 43  ===&gt;       0.0\n # 44  ===&gt;       0.0\n # 45  ===&gt;       0.0\n # 46  ===&gt;       0.0\n # 47  ===&gt;       0.0\n # 48  ===&gt;       0.0\n # 49  ===&gt;       0.0\n # 50  ===&gt;       0.0\n # 51  ===&gt;       0.0\n # 52  ===&gt;       0.0\n # 53  ===&gt;       0.0\n # 54  ===&gt;       0.0\n # 55  ===&gt;       0.0\n # 56  ===&gt;       0.0\n # 57  ===&gt;       0.0\n # 58  ===&gt;       0.0\n # 59  ===&gt;       0.0\n # 60  ===&gt;       0.0\n # 61  ===&gt;       0.0\n # 62  ===&gt;       0.0\n # 63  ===&gt;       0.0\n # 64  ===&gt;       0.0\n # 65  ===&gt;       0.0\n # 66  ===&gt;       0.0\n # 67  ===&gt;       0.0\n # 68  ===&gt;       0.0\n # 69  ===&gt;       0.0\n # 70  ===&gt;       0.0\n # 71  ===&gt;       0.0\n # 72  ===&gt;       0.0\n # 73  ===&gt;       0.0\n # 74  ===&gt;       0.0\n # 75  ===&gt;       0.0\n # 76  ===&gt;       0.0\n # 77  ===&gt;       0.0\n # 78  ===&gt;       0.0\n # 79  ===&gt;       0.0\n # 80  ===&gt;       0.0\n # 81  ===&gt;       0.0\n # 82  ===&gt;       0.0\n # 83  ===&gt;       0.0\n # 84  ===&gt;       0.0\n # 85  ===&gt;       0.0\n # 86  ===&gt;       0.0\n # 87  ===&gt;       0.0\n # 88  ===&gt;       0.0\n # 89  ===&gt;       0.0\n # 90  ===&gt;       0.0\n # 91  ===&gt;       0.0\n # 92  ===&gt;       0.0\n # 93  ===&gt;       0.0\n # 94  ===&gt;       0.0\n # 95  ===&gt;       0.0\n # 96  ===&gt;       0.0\n # 97  ===&gt;       0.0\n # 98  ===&gt;       0.0\n # 99  ===&gt;       0.0\n # 100  ===&gt;       0.0\n # 101  ===&gt;       0.0\n # 102  ===&gt;       0.0\n # 103  ===&gt;       0.0\n # 104  ===&gt;       0.0\n # 105  ===&gt;       0.0\n # 106  ===&gt;       0.0\n # 107  ===&gt;       0.0\n # 108  ===&gt;       0.0\n # 109  ===&gt;       0.0\n # 110  ===&gt;       0.0\n # 111  ===&gt;       0.0\n # 112  ===&gt;       0.0\n # 113  ===&gt;       0.0\n # 114  ===&gt;       0.0\n # 115  ===&gt;       0.0\n # 116  ===&gt;       0.0\n # 117  ===&gt;       0.0\n # 118  ===&gt;       0.0\n # 119  ===&gt;       0.0\n # 120  ===&gt;       0.0\n # 121  ===&gt;       0.0\n # 122  ===&gt;       0.0\n # 123  ===&gt;       0.0\n # 124  ===&gt;       0.0\n # 125  ===&gt;       0.0\n # 126  ===&gt;       0.0\n # 127  ===&gt;       0.0\n # 128  ===&gt;       0.0\n # 129  ===&gt;       0.0\n # 130  ===&gt;       0.0\n # 131  ===&gt;       0.0\n # 132  ===&gt;       0.0\n # 133  ===&gt;       0.0\n # 134  ===&gt;       0.0\n # 135  ===&gt;       0.0\n # 136  ===&gt;       0.0\n # 137  ===&gt;       0.0\n # 138  ===&gt;       0.0\n # 139  ===&gt;       0.0\n # 140  ===&gt;       0.0\n # 141  ===&gt;       0.0\n # 142  ===&gt;       0.0\n # 143  ===&gt;       0.0\n # 144  ===&gt;       0.0\n # 145  ===&gt;       0.0\n # 146  ===&gt;       0.0\n # 147  ===&gt;       0.0\n # 148  ===&gt;       0.0\n # 149  ===&gt;       0.0\n # 150  ===&gt;       0.0\n # 151  ===&gt;       0.0\n # 152  ===&gt;       0.0\n # 153  ===&gt;       0.0\n # 154  ===&gt;       0.0\n # 155  ===&gt;       0.0\n # 156  ===&gt;       0.0\n # 157  ===&gt;       0.0\n # 158  ===&gt;       0.0\n # 159  ===&gt;       0.0\n # 160  ===&gt;       0.0\n # 161  ===&gt;       0.0\n # 162  ===&gt;       0.0\n # 163  ===&gt;       0.0\n # 164  ===&gt;       0.0\n # 165  ===&gt;       0.0\n # 166  ===&gt;       0.0\n # 167  ===&gt;       0.0\n # 168  ===&gt;       0.0\n # 169  ===&gt;       0.0\n # 170  ===&gt;       0.0\n # 171  ===&gt;       0.0\n # 172  ===&gt;       0.0\n # 173  ===&gt;       0.0\n # 174  ===&gt;       0.0\n # 175  ===&gt;       0.0\n # 176  ===&gt;       0.0\n # 177  ===&gt;       0.0\n # 178  ===&gt;       0.0\n # 179  ===&gt;       0.0\n # 180  ===&gt;       0.0\n # 181  ===&gt;       0.0\n # 182  ===&gt;       0.0\n # 183  ===&gt;       0.0\n # 184  ===&gt;       0.0\n # 185  ===&gt;       0.0\n # 186  ===&gt;       0.0\n # 187  ===&gt;       0.0\n # 188  ===&gt;       0.0\n # 189  ===&gt;       0.0\n # 190  ===&gt;       0.0\n # 191  ===&gt;       0.0\n # 192  ===&gt;       0.0\n # 193  ===&gt;       0.0\n # 194  ===&gt;       0.0\n # 195  ===&gt;       0.0\n # 196  ===&gt;       0.0\n # 197  ===&gt;       0.0\n # 198  ===&gt;       0.0\n # 199  ===&gt;       0.0\n # 200  ===&gt;       0.0\n # 201  ===&gt;       0.0\n # 202  ===&gt;       0.0\n # 203  ===&gt;       0.0\n # 204  ===&gt;       0.0\n # 205  ===&gt;       0.0\n # 206  ===&gt;       0.0\n # 207  ===&gt;       0.0\n # 208  ===&gt;       0.0\n # 209  ===&gt;       0.0\n # 210  ===&gt;       0.0\n # 211  ===&gt;       0.0\n # 212  ===&gt;       0.0\n # 213  ===&gt;       0.0\n # 214  ===&gt;       0.0\n # 215  ===&gt;       0.0\n # 216  ===&gt;       0.0\n # 217  ===&gt;       0.0\n # 218  ===&gt;       0.0\n # 219  ===&gt;       0.0\n # 220  ===&gt;       0.0\n # 221  ===&gt;       0.0\n # 222  ===&gt;       0.0\n # 223  ===&gt;       0.0\n # 224  ===&gt;       0.0\n # 225  ===&gt;       0.0\nhoppings:\n&lt;  0 | H |  1 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  1 | H | 11 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  1 | H |  2 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  2 | H | 12 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  2 | H |  3 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  3 | H | 13 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  3 | H |  4 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  4 | H | 14 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  4 | H |  5 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  5 | H | 15 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  5 | H |  6 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  6 | H | 16 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  6 | H |  7 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  7 | H | 17 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  7 | H |  8 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  8 | H | 18 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  8 | H |  9 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  9 | H | 19 &gt;     ===&gt;      1.0 +     0.0 i\n&lt;  9 | H | 113 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 10 | H | 20 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 10 | H | 114 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 11 | H | 21 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 11 | H | 12 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 12 | H | 22 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 12 | H | 13 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 13 | H | 23 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 13 | H | 14 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 14 | H | 24 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 14 | H | 15 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 15 | H | 25 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 15 | H | 16 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 16 | H | 26 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 16 | H | 17 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 17 | H | 27 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 17 | H | 18 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 18 | H | 28 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 18 | H | 19 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 19 | H | 29 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 19 | H | 20 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 20 | H | 30 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 20 | H | 124 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 21 | H | 31 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 21 | H | 22 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 22 | H | 32 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 22 | H | 23 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 23 | H | 33 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 23 | H | 24 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 24 | H | 34 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 24 | H | 25 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 25 | H | 35 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 25 | H | 26 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 26 | H | 36 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 26 | H | 27 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 27 | H | 37 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 27 | H | 28 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 28 | H | 38 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 28 | H | 29 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 29 | H | 39 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 29 | H | 30 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 30 | H | 40 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 30 | H | 134 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 31 | H | 41 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 31 | H | 32 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 32 | H | 42 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 32 | H | 33 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 33 | H | 43 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 33 | H | 34 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 34 | H | 44 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 34 | H | 35 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 35 | H | 45 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 35 | H | 36 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 36 | H | 46 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 36 | H | 37 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 37 | H | 47 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 37 | H | 38 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 38 | H | 48 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 38 | H | 39 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 39 | H | 49 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 39 | H | 40 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 40 | H | 50 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 40 | H | 144 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 41 | H | 42 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 42 | H | 52 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 42 | H | 43 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 43 | H | 53 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 43 | H | 44 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 44 | H | 54 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 44 | H | 45 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 45 | H | 55 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 45 | H | 46 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 46 | H | 56 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 46 | H | 47 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 47 | H | 57 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 47 | H | 48 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 48 | H | 58 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 48 | H | 49 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 49 | H | 59 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 49 | H | 50 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 50 | H | 60 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 50 | H | 154 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 51 | H | 52 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 52 | H | 62 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 52 | H | 53 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 53 | H | 63 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 53 | H | 54 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 54 | H | 64 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 54 | H | 55 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 55 | H | 65 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 55 | H | 56 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 56 | H | 66 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 56 | H | 57 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 57 | H | 67 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 57 | H | 58 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 58 | H | 68 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 58 | H | 59 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 59 | H | 69 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 59 | H | 60 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 60 | H | 70 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 60 | H | 164 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 61 | H | 71 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 61 | H | 165 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 62 | H | 72 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 62 | H | 63 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 63 | H | 73 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 63 | H | 64 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 64 | H | 74 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 64 | H | 65 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 65 | H | 75 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 65 | H | 66 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 66 | H | 76 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 66 | H | 67 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 67 | H | 77 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 67 | H | 68 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 68 | H | 78 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 68 | H | 69 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 69 | H | 79 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 69 | H | 70 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 70 | H | 80 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 70 | H | 71 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 71 | H | 81 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 71 | H | 175 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 72 | H | 82 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 72 | H | 73 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 73 | H | 83 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 73 | H | 74 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 74 | H | 84 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 74 | H | 75 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 75 | H | 85 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 75 | H | 76 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 76 | H | 86 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 76 | H | 77 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 77 | H | 87 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 77 | H | 78 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 78 | H | 88 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 78 | H | 79 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 79 | H | 89 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 79 | H | 80 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 80 | H | 90 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 80 | H | 81 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 81 | H | 91 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 81 | H | 185 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 82 | H | 92 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 82 | H | 83 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 83 | H | 93 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 83 | H | 84 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 84 | H | 94 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 84 | H | 85 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 85 | H | 95 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 85 | H | 86 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 86 | H | 96 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 86 | H | 87 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 87 | H | 97 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 87 | H | 88 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 88 | H | 98 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 88 | H | 89 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 89 | H | 99 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 89 | H | 90 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 90 | H | 100 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 90 | H | 91 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 91 | H | 101 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 91 | H | 195 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 92 | H | 93 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 93 | H | 94 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 94 | H | 95 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 95 | H | 96 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 96 | H | 97 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 97 | H | 98 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 98 | H | 99 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 99 | H | 100 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 100 | H | 101 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 101 | H | 205 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 112 | H |  1 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 113 | H | 20 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 113 | H | 114 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 114 | H | 124 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 114 | H | 115 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 115 | H | 125 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 115 | H | 116 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 116 | H | 126 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 116 | H | 117 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 117 | H | 127 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 117 | H | 118 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 118 | H | 128 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 118 | H | 119 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 119 | H | 129 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 119 | H | 120 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 120 | H | 130 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 120 | H | 121 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 121 | H | 131 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 121 | H | 122 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 122 | H | 132 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 123 | H | 133 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 124 | H | 134 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 124 | H | 125 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 125 | H | 135 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 125 | H | 126 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 126 | H | 136 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 126 | H | 127 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 127 | H | 137 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 127 | H | 128 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 128 | H | 138 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 128 | H | 129 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 129 | H | 139 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 129 | H | 130 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 130 | H | 140 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 130 | H | 131 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 131 | H | 141 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 131 | H | 132 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 132 | H | 142 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 132 | H | 133 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 133 | H | 143 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 134 | H | 144 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 134 | H | 135 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 135 | H | 145 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 135 | H | 136 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 136 | H | 146 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 136 | H | 137 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 137 | H | 147 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 137 | H | 138 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 138 | H | 148 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 138 | H | 139 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 139 | H | 149 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 139 | H | 140 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 140 | H | 150 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 140 | H | 141 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 141 | H | 151 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 141 | H | 142 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 142 | H | 152 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 142 | H | 143 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 143 | H | 153 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 144 | H | 154 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 144 | H | 145 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 145 | H | 155 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 145 | H | 146 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 146 | H | 156 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 146 | H | 147 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 147 | H | 157 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 147 | H | 148 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 148 | H | 158 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 148 | H | 149 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 149 | H | 159 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 149 | H | 150 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 150 | H | 160 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 150 | H | 151 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 151 | H | 161 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 151 | H | 152 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 152 | H | 162 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 152 | H | 153 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 153 | H | 163 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 154 | H | 61 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 154 | H | 155 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 155 | H | 165 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 155 | H | 156 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 156 | H | 166 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 156 | H | 157 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 157 | H | 167 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 157 | H | 158 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 158 | H | 168 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 158 | H | 159 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 159 | H | 169 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 159 | H | 160 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 160 | H | 170 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 160 | H | 161 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 161 | H | 171 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 161 | H | 162 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 162 | H | 172 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 162 | H | 163 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 163 | H | 173 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 164 | H | 71 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 164 | H | 165 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 165 | H | 175 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 165 | H | 166 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 166 | H | 176 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 166 | H | 167 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 167 | H | 177 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 167 | H | 168 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 168 | H | 178 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 168 | H | 169 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 169 | H | 179 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 169 | H | 170 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 170 | H | 180 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 170 | H | 171 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 171 | H | 181 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 171 | H | 172 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 172 | H | 182 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 172 | H | 173 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 173 | H | 183 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 174 | H | 184 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 175 | H | 185 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 175 | H | 176 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 176 | H | 186 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 176 | H | 177 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 177 | H | 187 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 177 | H | 178 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 178 | H | 188 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 178 | H | 179 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 179 | H | 189 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 179 | H | 180 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 180 | H | 190 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 180 | H | 181 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 181 | H | 191 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 181 | H | 182 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 182 | H | 192 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 182 | H | 183 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 183 | H | 193 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 183 | H | 184 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 184 | H | 194 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 185 | H | 195 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 185 | H | 186 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 186 | H | 196 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 186 | H | 187 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 187 | H | 197 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 187 | H | 188 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 188 | H | 198 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 188 | H | 189 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 189 | H | 199 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 189 | H | 190 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 190 | H | 200 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 190 | H | 191 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 191 | H | 201 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 191 | H | 192 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 192 | H | 202 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 192 | H | 193 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 193 | H | 203 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 193 | H | 194 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 194 | H | 204 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 195 | H | 205 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 195 | H | 196 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 196 | H | 206 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 196 | H | 197 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 197 | H | 207 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 197 | H | 198 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 198 | H | 208 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 198 | H | 199 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 199 | H | 209 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 199 | H | 200 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 200 | H | 210 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 200 | H | 201 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 201 | H | 211 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 201 | H | 202 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 202 | H | 212 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 202 | H | 203 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 203 | H | 213 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 203 | H | 204 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 204 | H | 214 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 205 | H | 206 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 206 | H | 207 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 207 | H | 208 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 208 | H | 209 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 209 | H | 210 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 210 | H | 211 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 211 | H | 212 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 212 | H | 213 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 213 | H | 214 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 225 | H | 20 &gt;     ===&gt;      1.0 +     0.0 i\n&lt; 225 | H | 114 &gt;     ===&gt;      1.0 +     0.0 i\nhopping distances:\n|  pos(  0 )  - pos(  1 ) |  =       1.0\n|  pos(  1 )  - pos( 11 ) |  =       1.0\n|  pos(  1 )  - pos(  2 ) |  =       1.0\n|  pos(  2 )  - pos( 12 ) |  =       1.0\n|  pos(  2 )  - pos(  3 ) |  =       1.0\n|  pos(  3 )  - pos( 13 ) |  =       1.0\n|  pos(  3 )  - pos(  4 ) |  =       1.0\n|  pos(  4 )  - pos( 14 ) |  =       1.0\n|  pos(  4 )  - pos(  5 ) |  =       1.0\n|  pos(  5 )  - pos( 15 ) |  =       1.0\n|  pos(  5 )  - pos(  6 ) |  =       1.0\n|  pos(  6 )  - pos( 16 ) |  =       1.0\n|  pos(  6 )  - pos(  7 ) |  =       1.0\n|  pos(  7 )  - pos( 17 ) |  =       1.0\n|  pos(  7 )  - pos(  8 ) |  =       1.0\n|  pos(  8 )  - pos( 18 ) |  =       1.0\n|  pos(  8 )  - pos(  9 ) |  =       1.0\n|  pos(  9 )  - pos( 19 ) |  =       1.0\n|  pos(  9 )  - pos( 113 ) |  =       1.0\n|  pos( 10 )  - pos( 20 ) |  =       1.0\n|  pos( 10 )  - pos( 114 ) |  =       1.0\n|  pos( 11 )  - pos( 21 ) |  =       1.0\n|  pos( 11 )  - pos( 12 ) |  =       1.0\n|  pos( 12 )  - pos( 22 ) |  =       1.0\n|  pos( 12 )  - pos( 13 ) |  =       1.0\n|  pos( 13 )  - pos( 23 ) |  =       1.0\n|  pos( 13 )  - pos( 14 ) |  =       1.0\n|  pos( 14 )  - pos( 24 ) |  =       1.0\n|  pos( 14 )  - pos( 15 ) |  =       1.0\n|  pos( 15 )  - pos( 25 ) |  =       1.0\n|  pos( 15 )  - pos( 16 ) |  =       1.0\n|  pos( 16 )  - pos( 26 ) |  =       1.0\n|  pos( 16 )  - pos( 17 ) |  =       1.0\n|  pos( 17 )  - pos( 27 ) |  =       1.0\n|  pos( 17 )  - pos( 18 ) |  =       1.0\n|  pos( 18 )  - pos( 28 ) |  =       1.0\n|  pos( 18 )  - pos( 19 ) |  =       1.0\n|  pos( 19 )  - pos( 29 ) |  =       1.0\n|  pos( 19 )  - pos( 20 ) |  =       1.0\n|  pos( 20 )  - pos( 30 ) |  =       1.0\n|  pos( 20 )  - pos( 124 ) |  =       1.0\n|  pos( 21 )  - pos( 31 ) |  =       1.0\n|  pos( 21 )  - pos( 22 ) |  =       1.0\n|  pos( 22 )  - pos( 32 ) |  =       1.0\n|  pos( 22 )  - pos( 23 ) |  =       1.0\n|  pos( 23 )  - pos( 33 ) |  =       1.0\n|  pos( 23 )  - pos( 24 ) |  =       1.0\n|  pos( 24 )  - pos( 34 ) |  =       1.0\n|  pos( 24 )  - pos( 25 ) |  =       1.0\n|  pos( 25 )  - pos( 35 ) |  =       1.0\n|  pos( 25 )  - pos( 26 ) |  =       1.0\n|  pos( 26 )  - pos( 36 ) |  =       1.0\n|  pos( 26 )  - pos( 27 ) |  =       1.0\n|  pos( 27 )  - pos( 37 ) |  =       1.0\n|  pos( 27 )  - pos( 28 ) |  =       1.0\n|  pos( 28 )  - pos( 38 ) |  =       1.0\n|  pos( 28 )  - pos( 29 ) |  =       1.0\n|  pos( 29 )  - pos( 39 ) |  =       1.0\n|  pos( 29 )  - pos( 30 ) |  =       1.0\n|  pos( 30 )  - pos( 40 ) |  =       1.0\n|  pos( 30 )  - pos( 134 ) |  =       1.0\n|  pos( 31 )  - pos( 41 ) |  =       1.0\n|  pos( 31 )  - pos( 32 ) |  =       1.0\n|  pos( 32 )  - pos( 42 ) |  =       1.0\n|  pos( 32 )  - pos( 33 ) |  =       1.0\n|  pos( 33 )  - pos( 43 ) |  =       1.0\n|  pos( 33 )  - pos( 34 ) |  =       1.0\n|  pos( 34 )  - pos( 44 ) |  =       1.0\n|  pos( 34 )  - pos( 35 ) |  =       1.0\n|  pos( 35 )  - pos( 45 ) |  =       1.0\n|  pos( 35 )  - pos( 36 ) |  =       1.0\n|  pos( 36 )  - pos( 46 ) |  =       1.0\n|  pos( 36 )  - pos( 37 ) |  =       1.0\n|  pos( 37 )  - pos( 47 ) |  =       1.0\n|  pos( 37 )  - pos( 38 ) |  =       1.0\n|  pos( 38 )  - pos( 48 ) |  =       1.0\n|  pos( 38 )  - pos( 39 ) |  =       1.0\n|  pos( 39 )  - pos( 49 ) |  =       1.0\n|  pos( 39 )  - pos( 40 ) |  =       1.0\n|  pos( 40 )  - pos( 50 ) |  =       1.0\n|  pos( 40 )  - pos( 144 ) |  =       1.0\n|  pos( 41 )  - pos( 42 ) |  =       1.0\n|  pos( 42 )  - pos( 52 ) |  =       1.0\n|  pos( 42 )  - pos( 43 ) |  =       1.0\n|  pos( 43 )  - pos( 53 ) |  =       1.0\n|  pos( 43 )  - pos( 44 ) |  =       1.0\n|  pos( 44 )  - pos( 54 ) |  =       1.0\n|  pos( 44 )  - pos( 45 ) |  =       1.0\n|  pos( 45 )  - pos( 55 ) |  =       1.0\n|  pos( 45 )  - pos( 46 ) |  =       1.0\n|  pos( 46 )  - pos( 56 ) |  =       1.0\n|  pos( 46 )  - pos( 47 ) |  =       1.0\n|  pos( 47 )  - pos( 57 ) |  =       1.0\n|  pos( 47 )  - pos( 48 ) |  =       1.0\n|  pos( 48 )  - pos( 58 ) |  =       1.0\n|  pos( 48 )  - pos( 49 ) |  =       1.0\n|  pos( 49 )  - pos( 59 ) |  =       1.0\n|  pos( 49 )  - pos( 50 ) |  =       1.0\n|  pos( 50 )  - pos( 60 ) |  =       1.0\n|  pos( 50 )  - pos( 154 ) |  =       1.0\n|  pos( 51 )  - pos( 52 ) |  =       1.0\n|  pos( 52 )  - pos( 62 ) |  =       1.0\n|  pos( 52 )  - pos( 53 ) |  =       1.0\n|  pos( 53 )  - pos( 63 ) |  =       1.0\n|  pos( 53 )  - pos( 54 ) |  =       1.0\n|  pos( 54 )  - pos( 64 ) |  =       1.0\n|  pos( 54 )  - pos( 55 ) |  =       1.0\n|  pos( 55 )  - pos( 65 ) |  =       1.0\n|  pos( 55 )  - pos( 56 ) |  =       1.0\n|  pos( 56 )  - pos( 66 ) |  =       1.0\n|  pos( 56 )  - pos( 57 ) |  =       1.0\n|  pos( 57 )  - pos( 67 ) |  =       1.0\n|  pos( 57 )  - pos( 58 ) |  =       1.0\n|  pos( 58 )  - pos( 68 ) |  =       1.0\n|  pos( 58 )  - pos( 59 ) |  =       1.0\n|  pos( 59 )  - pos( 69 ) |  =       1.0\n|  pos( 59 )  - pos( 60 ) |  =       1.0\n|  pos( 60 )  - pos( 70 ) |  =       1.0\n|  pos( 60 )  - pos( 164 ) |  =       1.0\n|  pos( 61 )  - pos( 71 ) |  =       1.0\n|  pos( 61 )  - pos( 165 ) |  =       1.0\n|  pos( 62 )  - pos( 72 ) |  =       1.0\n|  pos( 62 )  - pos( 63 ) |  =       1.0\n|  pos( 63 )  - pos( 73 ) |  =       1.0\n|  pos( 63 )  - pos( 64 ) |  =       1.0\n|  pos( 64 )  - pos( 74 ) |  =       1.0\n|  pos( 64 )  - pos( 65 ) |  =       1.0\n|  pos( 65 )  - pos( 75 ) |  =       1.0\n|  pos( 65 )  - pos( 66 ) |  =       1.0\n|  pos( 66 )  - pos( 76 ) |  =       1.0\n|  pos( 66 )  - pos( 67 ) |  =       1.0\n|  pos( 67 )  - pos( 77 ) |  =       1.0\n|  pos( 67 )  - pos( 68 ) |  =       1.0\n|  pos( 68 )  - pos( 78 ) |  =       1.0\n|  pos( 68 )  - pos( 69 ) |  =       1.0\n|  pos( 69 )  - pos( 79 ) |  =       1.0\n|  pos( 69 )  - pos( 70 ) |  =       1.0\n|  pos( 70 )  - pos( 80 ) |  =       1.0\n|  pos( 70 )  - pos( 71 ) |  =       1.0\n|  pos( 71 )  - pos( 81 ) |  =       1.0\n|  pos( 71 )  - pos( 175 ) |  =       1.0\n|  pos( 72 )  - pos( 82 ) |  =       1.0\n|  pos( 72 )  - pos( 73 ) |  =       1.0\n|  pos( 73 )  - pos( 83 ) |  =       1.0\n|  pos( 73 )  - pos( 74 ) |  =       1.0\n|  pos( 74 )  - pos( 84 ) |  =       1.0\n|  pos( 74 )  - pos( 75 ) |  =       1.0\n|  pos( 75 )  - pos( 85 ) |  =       1.0\n|  pos( 75 )  - pos( 76 ) |  =       1.0\n|  pos( 76 )  - pos( 86 ) |  =       1.0\n|  pos( 76 )  - pos( 77 ) |  =       1.0\n|  pos( 77 )  - pos( 87 ) |  =       1.0\n|  pos( 77 )  - pos( 78 ) |  =       1.0\n|  pos( 78 )  - pos( 88 ) |  =       1.0\n|  pos( 78 )  - pos( 79 ) |  =       1.0\n|  pos( 79 )  - pos( 89 ) |  =       1.0\n|  pos( 79 )  - pos( 80 ) |  =       1.0\n|  pos( 80 )  - pos( 90 ) |  =       1.0\n|  pos( 80 )  - pos( 81 ) |  =       1.0\n|  pos( 81 )  - pos( 91 ) |  =       1.0\n|  pos( 81 )  - pos( 185 ) |  =       1.0\n|  pos( 82 )  - pos( 92 ) |  =       1.0\n|  pos( 82 )  - pos( 83 ) |  =       1.0\n|  pos( 83 )  - pos( 93 ) |  =       1.0\n|  pos( 83 )  - pos( 84 ) |  =       1.0\n|  pos( 84 )  - pos( 94 ) |  =       1.0\n|  pos( 84 )  - pos( 85 ) |  =       1.0\n|  pos( 85 )  - pos( 95 ) |  =       1.0\n|  pos( 85 )  - pos( 86 ) |  =       1.0\n|  pos( 86 )  - pos( 96 ) |  =       1.0\n|  pos( 86 )  - pos( 87 ) |  =       1.0\n|  pos( 87 )  - pos( 97 ) |  =       1.0\n|  pos( 87 )  - pos( 88 ) |  =       1.0\n|  pos( 88 )  - pos( 98 ) |  =       1.0\n|  pos( 88 )  - pos( 89 ) |  =       1.0\n|  pos( 89 )  - pos( 99 ) |  =       1.0\n|  pos( 89 )  - pos( 90 ) |  =       1.0\n|  pos( 90 )  - pos( 100 ) |  =       1.0\n|  pos( 90 )  - pos( 91 ) |  =       1.0\n|  pos( 91 )  - pos( 101 ) |  =       1.0\n|  pos( 91 )  - pos( 195 ) |  =       1.0\n|  pos( 92 )  - pos( 93 ) |  =       1.0\n|  pos( 93 )  - pos( 94 ) |  =       1.0\n|  pos( 94 )  - pos( 95 ) |  =       1.0\n|  pos( 95 )  - pos( 96 ) |  =       1.0\n|  pos( 96 )  - pos( 97 ) |  =       1.0\n|  pos( 97 )  - pos( 98 ) |  =       1.0\n|  pos( 98 )  - pos( 99 ) |  =       1.0\n|  pos( 99 )  - pos( 100 ) |  =       1.0\n|  pos( 100 )  - pos( 101 ) |  =       1.0\n|  pos( 101 )  - pos( 205 ) |  =       1.0\n|  pos( 112 )  - pos(  1 ) |  =       1.0\n|  pos( 113 )  - pos( 20 ) |  =       1.0\n|  pos( 113 )  - pos( 114 ) |  =       1.0\n|  pos( 114 )  - pos( 124 ) |  =       1.0\n|  pos( 114 )  - pos( 115 ) |  =       1.0\n|  pos( 115 )  - pos( 125 ) |  =       1.0\n|  pos( 115 )  - pos( 116 ) |  =       1.0\n|  pos( 116 )  - pos( 126 ) |  =       1.0\n|  pos( 116 )  - pos( 117 ) |  =       1.0\n|  pos( 117 )  - pos( 127 ) |  =       1.0\n|  pos( 117 )  - pos( 118 ) |  =       1.0\n|  pos( 118 )  - pos( 128 ) |  =       1.0\n|  pos( 118 )  - pos( 119 ) |  =       1.0\n|  pos( 119 )  - pos( 129 ) |  =       1.0\n|  pos( 119 )  - pos( 120 ) |  =       1.0\n|  pos( 120 )  - pos( 130 ) |  =       1.0\n|  pos( 120 )  - pos( 121 ) |  =       1.0\n|  pos( 121 )  - pos( 131 ) |  =       1.0\n|  pos( 121 )  - pos( 122 ) |  =       1.0\n|  pos( 122 )  - pos( 132 ) |  =       1.0\n|  pos( 123 )  - pos( 133 ) |  =       1.0\n|  pos( 124 )  - pos( 134 ) |  =       1.0\n|  pos( 124 )  - pos( 125 ) |  =       1.0\n|  pos( 125 )  - pos( 135 ) |  =       1.0\n|  pos( 125 )  - pos( 126 ) |  =       1.0\n|  pos( 126 )  - pos( 136 ) |  =       1.0\n|  pos( 126 )  - pos( 127 ) |  =       1.0\n|  pos( 127 )  - pos( 137 ) |  =       1.0\n|  pos( 127 )  - pos( 128 ) |  =       1.0\n|  pos( 128 )  - pos( 138 ) |  =       1.0\n|  pos( 128 )  - pos( 129 ) |  =       1.0\n|  pos( 129 )  - pos( 139 ) |  =       1.0\n|  pos( 129 )  - pos( 130 ) |  =       1.0\n|  pos( 130 )  - pos( 140 ) |  =       1.0\n|  pos( 130 )  - pos( 131 ) |  =       1.0\n|  pos( 131 )  - pos( 141 ) |  =       1.0\n|  pos( 131 )  - pos( 132 ) |  =       1.0\n|  pos( 132 )  - pos( 142 ) |  =       1.0\n|  pos( 132 )  - pos( 133 ) |  =       1.0\n|  pos( 133 )  - pos( 143 ) |  =       1.0\n|  pos( 134 )  - pos( 144 ) |  =       1.0\n|  pos( 134 )  - pos( 135 ) |  =       1.0\n|  pos( 135 )  - pos( 145 ) |  =       1.0\n|  pos( 135 )  - pos( 136 ) |  =       1.0\n|  pos( 136 )  - pos( 146 ) |  =       1.0\n|  pos( 136 )  - pos( 137 ) |  =       1.0\n|  pos( 137 )  - pos( 147 ) |  =       1.0\n|  pos( 137 )  - pos( 138 ) |  =       1.0\n|  pos( 138 )  - pos( 148 ) |  =       1.0\n|  pos( 138 )  - pos( 139 ) |  =       1.0\n|  pos( 139 )  - pos( 149 ) |  =       1.0\n|  pos( 139 )  - pos( 140 ) |  =       1.0\n|  pos( 140 )  - pos( 150 ) |  =       1.0\n|  pos( 140 )  - pos( 141 ) |  =       1.0\n|  pos( 141 )  - pos( 151 ) |  =       1.0\n|  pos( 141 )  - pos( 142 ) |  =       1.0\n|  pos( 142 )  - pos( 152 ) |  =       1.0\n|  pos( 142 )  - pos( 143 ) |  =       1.0\n|  pos( 143 )  - pos( 153 ) |  =       1.0\n|  pos( 144 )  - pos( 154 ) |  =       1.0\n|  pos( 144 )  - pos( 145 ) |  =       1.0\n|  pos( 145 )  - pos( 155 ) |  =       1.0\n|  pos( 145 )  - pos( 146 ) |  =       1.0\n|  pos( 146 )  - pos( 156 ) |  =       1.0\n|  pos( 146 )  - pos( 147 ) |  =       1.0\n|  pos( 147 )  - pos( 157 ) |  =       1.0\n|  pos( 147 )  - pos( 148 ) |  =       1.0\n|  pos( 148 )  - pos( 158 ) |  =       1.0\n|  pos( 148 )  - pos( 149 ) |  =       1.0\n|  pos( 149 )  - pos( 159 ) |  =       1.0\n|  pos( 149 )  - pos( 150 ) |  =       1.0\n|  pos( 150 )  - pos( 160 ) |  =       1.0\n|  pos( 150 )  - pos( 151 ) |  =       1.0\n|  pos( 151 )  - pos( 161 ) |  =       1.0\n|  pos( 151 )  - pos( 152 ) |  =       1.0\n|  pos( 152 )  - pos( 162 ) |  =       1.0\n|  pos( 152 )  - pos( 153 ) |  =       1.0\n|  pos( 153 )  - pos( 163 ) |  =       1.0\n|  pos( 154 )  - pos( 61 ) |  =       1.0\n|  pos( 154 )  - pos( 155 ) |  =       1.0\n|  pos( 155 )  - pos( 165 ) |  =       1.0\n|  pos( 155 )  - pos( 156 ) |  =       1.0\n|  pos( 156 )  - pos( 166 ) |  =       1.0\n|  pos( 156 )  - pos( 157 ) |  =       1.0\n|  pos( 157 )  - pos( 167 ) |  =       1.0\n|  pos( 157 )  - pos( 158 ) |  =       1.0\n|  pos( 158 )  - pos( 168 ) |  =       1.0\n|  pos( 158 )  - pos( 159 ) |  =       1.0\n|  pos( 159 )  - pos( 169 ) |  =       1.0\n|  pos( 159 )  - pos( 160 ) |  =       1.0\n|  pos( 160 )  - pos( 170 ) |  =       1.0\n|  pos( 160 )  - pos( 161 ) |  =       1.0\n|  pos( 161 )  - pos( 171 ) |  =       1.0\n|  pos( 161 )  - pos( 162 ) |  =       1.0\n|  pos( 162 )  - pos( 172 ) |  =       1.0\n|  pos( 162 )  - pos( 163 ) |  =       1.0\n|  pos( 163 )  - pos( 173 ) |  =       1.0\n|  pos( 164 )  - pos( 71 ) |  =       1.0\n|  pos( 164 )  - pos( 165 ) |  =       1.0\n|  pos( 165 )  - pos( 175 ) |  =       1.0\n|  pos( 165 )  - pos( 166 ) |  =       1.0\n|  pos( 166 )  - pos( 176 ) |  =       1.0\n|  pos( 166 )  - pos( 167 ) |  =       1.0\n|  pos( 167 )  - pos( 177 ) |  =       1.0\n|  pos( 167 )  - pos( 168 ) |  =       1.0\n|  pos( 168 )  - pos( 178 ) |  =       1.0\n|  pos( 168 )  - pos( 169 ) |  =       1.0\n|  pos( 169 )  - pos( 179 ) |  =       1.0\n|  pos( 169 )  - pos( 170 ) |  =       1.0\n|  pos( 170 )  - pos( 180 ) |  =       1.0\n|  pos( 170 )  - pos( 171 ) |  =       1.0\n|  pos( 171 )  - pos( 181 ) |  =       1.0\n|  pos( 171 )  - pos( 172 ) |  =       1.0\n|  pos( 172 )  - pos( 182 ) |  =       1.0\n|  pos( 172 )  - pos( 173 ) |  =       1.0\n|  pos( 173 )  - pos( 183 ) |  =       1.0\n|  pos( 174 )  - pos( 184 ) |  =       1.0\n|  pos( 175 )  - pos( 185 ) |  =       1.0\n|  pos( 175 )  - pos( 176 ) |  =       1.0\n|  pos( 176 )  - pos( 186 ) |  =       1.0\n|  pos( 176 )  - pos( 177 ) |  =       1.0\n|  pos( 177 )  - pos( 187 ) |  =       1.0\n|  pos( 177 )  - pos( 178 ) |  =       1.0\n|  pos( 178 )  - pos( 188 ) |  =       1.0\n|  pos( 178 )  - pos( 179 ) |  =       1.0\n|  pos( 179 )  - pos( 189 ) |  =       1.0\n|  pos( 179 )  - pos( 180 ) |  =       1.0\n|  pos( 180 )  - pos( 190 ) |  =       1.0\n|  pos( 180 )  - pos( 181 ) |  =       1.0\n|  pos( 181 )  - pos( 191 ) |  =       1.0\n|  pos( 181 )  - pos( 182 ) |  =       1.0\n|  pos( 182 )  - pos( 192 ) |  =       1.0\n|  pos( 182 )  - pos( 183 ) |  =       1.0\n|  pos( 183 )  - pos( 193 ) |  =       1.0\n|  pos( 183 )  - pos( 184 ) |  =       1.0\n|  pos( 184 )  - pos( 194 ) |  =       1.0\n|  pos( 185 )  - pos( 195 ) |  =       1.0\n|  pos( 185 )  - pos( 186 ) |  =       1.0\n|  pos( 186 )  - pos( 196 ) |  =       1.0\n|  pos( 186 )  - pos( 187 ) |  =       1.0\n|  pos( 187 )  - pos( 197 ) |  =       1.0\n|  pos( 187 )  - pos( 188 ) |  =       1.0\n|  pos( 188 )  - pos( 198 ) |  =       1.0\n|  pos( 188 )  - pos( 189 ) |  =       1.0\n|  pos( 189 )  - pos( 199 ) |  =       1.0\n|  pos( 189 )  - pos( 190 ) |  =       1.0\n|  pos( 190 )  - pos( 200 ) |  =       1.0\n|  pos( 190 )  - pos( 191 ) |  =       1.0\n|  pos( 191 )  - pos( 201 ) |  =       1.0\n|  pos( 191 )  - pos( 192 ) |  =       1.0\n|  pos( 192 )  - pos( 202 ) |  =       1.0\n|  pos( 192 )  - pos( 193 ) |  =       1.0\n|  pos( 193 )  - pos( 203 ) |  =       1.0\n|  pos( 193 )  - pos( 194 ) |  =       1.0\n|  pos( 194 )  - pos( 204 ) |  =       1.0\n|  pos( 195 )  - pos( 205 ) |  =       1.0\n|  pos( 195 )  - pos( 196 ) |  =       1.0\n|  pos( 196 )  - pos( 206 ) |  =       1.0\n|  pos( 196 )  - pos( 197 ) |  =       1.0\n|  pos( 197 )  - pos( 207 ) |  =       1.0\n|  pos( 197 )  - pos( 198 ) |  =       1.0\n|  pos( 198 )  - pos( 208 ) |  =       1.0\n|  pos( 198 )  - pos( 199 ) |  =       1.0\n|  pos( 199 )  - pos( 209 ) |  =       1.0\n|  pos( 199 )  - pos( 200 ) |  =       1.0\n|  pos( 200 )  - pos( 210 ) |  =       1.0\n|  pos( 200 )  - pos( 201 ) |  =       1.0\n|  pos( 201 )  - pos( 211 ) |  =       1.0\n|  pos( 201 )  - pos( 202 ) |  =       1.0\n|  pos( 202 )  - pos( 212 ) |  =       1.0\n|  pos( 202 )  - pos( 203 ) |  =       1.0\n|  pos( 203 )  - pos( 213 ) |  =       1.0\n|  pos( 203 )  - pos( 204 ) |  =       1.0\n|  pos( 204 )  - pos( 214 ) |  =       1.0\n|  pos( 205 )  - pos( 206 ) |  =       1.0\n|  pos( 206 )  - pos( 207 ) |  =       1.0\n|  pos( 207 )  - pos( 208 ) |  =       1.0\n|  pos( 208 )  - pos( 209 ) |  =       1.0\n|  pos( 209 )  - pos( 210 ) |  =       1.0\n|  pos( 210 )  - pos( 211 ) |  =       1.0\n|  pos( 211 )  - pos( 212 ) |  =       1.0\n|  pos( 212 )  - pos( 213 ) |  =       1.0\n|  pos( 213 )  - pos( 214 ) |  =       1.0\n|  pos( 225 )  - pos( 20 ) |  =       1.0\n|  pos( 225 )  - pos( 114 ) |  =       1.0\nTambién podemos obtener el hamiltoniano directamente usando ._gen_ham(). Esto se muestra debajo\ncuadrada_cortada_cortada._gen_ham()\n\narray([[0.+0.j, 1.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],\n       [1.+0.j, 0.+0.j, 1.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],\n       [0.+0.j, 1.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],\n       ...,\n       [0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],\n       [0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],\n       [0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j]])\nOtra información que podemos obtener son las posiciones, esto se hace con get.lat\nX,Y = dot( cuadrada_cortada_cortada.get_orb(),cuadrada_cortada_cortada.get_lat()).T\n\nscatter(X,Y)\nPodemos graficar los eigenvalores del sistema.\nfor n in range(len(eigenvalores)):\n    plot([0,1],[eigenvalores[n],eigenvalores[n]], c='k',alpha = 0.2)\nxlim(-4,4)\nLa función solve_all es aún más general. Luego será utilizada para resolver eigenvalores en sistemas periódicos.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Introducción a Python Tight-Binding</span>"
    ]
  },
  {
    "objectID": "clase4.html",
    "href": "clase4.html",
    "title": "7  Implementación del campo magnético",
    "section": "",
    "text": "7.1 Visualización de los niveles de energía\nUtilizamos el Hamiltoniano que usamos la clase pasada.\na1  = array([1,0])\na2  = array([0,1])\n\nvectoresRed = array([a1,a2]) #0*a1 + 0*a2\n\nsitio = array([1/2,1/2]) #Sitio del orbital\n\norbitales = array([sitio]) #Lista con todos los itios. \n\n# Definimos el Hamiltoniano de amarre fuerte.\ncuadrada = tb_model(2,2, vectoresRed, orbitales)\n\n#Definimos los hoppings.\nt = 1\ncuadrada.set_hop(t,0,0,[1,0])\n# Enlace entre orbital 0 y orbital 0 desplazo por 1*a1 + 0*a2\ncuadrada.set_hop(t,0,0,[0,1])\n# Enlace entre orbital 0 y orbital 0 desplazo por 0*a1 + 1*a2\n\ncuadrada.visualize(0,1)\n# (0,1) significa en la dirección de a1 y a2.\nPara obtener la estructura de bandas, debemos tomar un camino en el espacio recíproco. PythTB sabe crear un camino si se le dan de entrada puntos que definen el camino en la base del espacio recíproco. Debajo, definimos dichos puntos y usamos la función k_path. Esta función toma como entrada la serie de puntos que define el camino y el número de puntosa tomar. Luego, podemos usar la función solve_all usando como entrada el k_vec obtenido.\nPuntosaRecorrer = [[0,0], # 0 * b1 + 0 * b2\n                   [1/2,0], # 1/2 * b1 + 0 * b2\n                    [1/2,1/2]] # 1/2 * b1 + 1/2 * b2\n\n# Una vez dados los puntos, podemos \nk_vec,k_dist,k_node = cuadrada.k_path(PuntosaRecorrer,1001)\n\n\nEk = cuadrada.solve_all(k_vec)\n\n----- k_path report begin ----------\nreal-space lattice vectors\n [[1. 0.]\n [0. 1.]]\nk-space metric tensor\n [[1. 0.]\n [0. 1.]]\ninternal coordinates of nodes\n [[0.  0. ]\n [0.5 0. ]\n [0.5 0.5]]\nreciprocal-space lattice vectors\n [[1. 0.]\n [0. 1.]]\ncartesian coordinates of nodes\n [[0.  0. ]\n [0.5 0. ]\n [0.5 0.5]]\nlist of segments:\n  length =     0.5  from  [0. 0.]  to  [0.5 0. ]\n  length =     0.5  from  [0.5 0. ]  to  [0.5 0.5]\nnode distance list: [0.  0.5 1. ]\nnode index list:    [   0  500 1000]\n----- k_path report end ------------\n\"\"\" Ek tiene forma (nband,kpoints), donde nband es el número de bandas y kpoints el número de puntos k\nen el camino usado. Por eso debemos trasponer, para \ntener una gráfica donde se grafiquen puntos k vs los \n1001 valores de energía. \n\"\"\"\nplot(k_dist,Ek.T)\n# Una alternativa a trasponer es tomar el renglón cero.\nplot(k_dist,Ek[0])\nPara dar más estilo a esta gráfica recurrimos a la variable k_node. Esta variable contiene que valor entre 0 y 1 corresponde a cada uno de los puntos usados. Por ello, podemos usar k_node como ticks.\n# Una alternativa a trasponer es tomar el renglón cero.\nprint(k_node)\n\n[0.  0.5 1. ]\nHaciendo eso, tenemos lo siguiente\n# Una alternativa a trasponer es tomar el renglón cero.\nplot(k_dist,Ek[0])\nxticks(k_node, labels = [\"$Γ$\",\"X\",\"XY\"])\n\n([&lt;matplotlib.axis.XTick at 0x11f758e00&gt;,\n  &lt;matplotlib.axis.XTick at 0x11f758d40&gt;,\n  &lt;matplotlib.axis.XTick at 0x118cbd940&gt;],\n [Text(0.0, 0, '$Γ$'), Text(0.5, 0, 'X'), Text(1.0, 0, 'XY')])\nYa viendo como graficar las bandas, podemos proceder a añadir el campo magnético. Para ello, partimos del potencial vector \\[\\vec{A} = \\frac{1}{2}\\left(-By,Bx,0\\right) \\Longrightarrow \\vec{B} = B \\hat{e}_{z}.\\]\nLa forma de añadir el campo magnético es mediante la substitución de Peierls \\[t_{\\vec{A}}^{i \\rightarrow j} = t_{\\vec{A} = \\vec{0}}^{i \\rightarrow j}\\exp\\left[\\frac{iq}{h}\\int_{\\vec{r}_{i}}^{\\vec{r}_{j}} \\vec{A}\\cdot \\text{d}\\vec{r}\\right].\\]\nEn este caso \\[\\int_{\\vec{r}}^{\\vec{r}'} \\vec{A}\\cdot \\text{d}\\vec{r} = \\frac{B}{4}\\left[(y' + y)(x - x') + (x' + x)(y' - y) \\right].\\]\nPara el primer enlace horizontal, tenemos que \\(\\vec{r} = (a/2,a/2)\\) y \\(\\vec{r}' = (3a/2,a/2)\\). Esto arroja que \\[\\int_{\\vec{r}}^{\\vec{r}'} \\vec{A}\\cdot \\text{d}\\vec{r} = - \\frac{1}{4}Ba^{2}.\\] Para el enlace vertical \\(\\vec{r}' = (a/2,3a/2)\\), de modo que \\[\\int_{\\vec{r}}^{\\vec{r}'} \\vec{A}\\cdot \\text{d}\\vec{r} = \\frac{1}{4}Ba^{2}.\\]\nSin embargo, notemos que podríamos haber centrado nuestro sistema de coordenadas en el origen. En este caso \\(\\vec{r} = (0,0)\\) y \\(\\vec{r'} = (a,0)\\). Para este caso \\[\\int_{\\vec{r}}^{\\vec{r}'} \\vec{A}\\cdot \\text{d}\\vec{r} = 0.\\]\nAquí empezamos a encontrarnos varios problemas. El resultado no debería depender de donde ponemos el origen. ¿Qué norma elegimos entonces?\nPara una red cuadrada, una forma de elegir la norma es tomando \\[\\vec{A} = \\left(0,Bx,0\\right)\\] y usando una supercelda que conserve la periodicidad de este potencial. Para esta elección, la fase de Peierls es \\[\\phi = i \\frac{eB}{2\\hbar}a^{2}\\left[(x'+x)(y'-y)\\right].\\] En esta fase, las \\((x,y)\\) están en términos de la base (tal como lo hace PythTB), por ello sacamos a.\nEn general, siempre se puede jugar con tomar una celda más grande para que esta tenga la periodicidad del potencial vector. Dicho eso, creamos nuestra supercelda para este problema. También, definimos las constantes que aparecen en la fase de Peierls.\n# Número de repeticiones\nnrep = 10\n\nsc = cuadrada.cut_piece(nrep,0)\n\n# Carga del electrón\ne = 1.602e-19 #C\n\n# Constante de Planck\nh = 6.62e-34\nhbar = h/2/pi\n\n# Campo magnético\nB = 400 # T (logrado fácilmente con imanes Mi Alegría)\n\n# Constante de red\na = 2e-10\n\nfactor = e*B*a*a/2/hbar\nImprimimos el factor.\nprint(factor)\n\n0.012163943035772444\nPara añadir el campo magnético, copiaremos el hamiltoniano modificando los hoppings.\n# Copia del Hamiltoniano modificando los hoppings\nscMAG = tb_model(2,2,sc.get_lat(),sc.get_orb())\nPara saber que hemos copiado, mostramos la supercelda definida anteriormente y sus hoppings. Para esto último usamos el método _hoppings.\nsc._hoppings\n\n[[1, 0, 1, array([0, 0])],\n [1, 0, 0, array([0, 1])],\n [1, 1, 2, array([0, 0])],\n [1, 1, 1, array([0, 1])],\n [1, 2, 3, array([0, 0])],\n [1, 2, 2, array([0, 1])],\n [1, 3, 4, array([0, 0])],\n [1, 3, 3, array([0, 1])],\n [1, 4, 5, array([0, 0])],\n [1, 4, 4, array([0, 1])],\n [1, 5, 6, array([0, 0])],\n [1, 5, 5, array([0, 1])],\n [1, 6, 7, array([0, 0])],\n [1, 6, 6, array([0, 1])],\n [1, 7, 8, array([0, 0])],\n [1, 7, 7, array([0, 1])],\n [1, 8, 9, array([0, 0])],\n [1, 8, 8, array([0, 1])],\n [1, 9, 9, array([0, 1])]]\nsc.visualize(0,1)\nDicho eso, modificamos los hoppings dentro de nuestra copia. Para ello, usamos la ecuación expuesta anteriormente. Primero obtenemos las posiciones de los sitios. También obtenemos el shift que tiene cada sitio respecto a la primera celda unitaria. Con estos datos, hacemos la modificación a los hoppings. En cada iteración imprimimos el hopping que obtenemos.\nX,Y = dot(sc.get_orb(),sc.get_lat()).T\nfor hop,i,j,cell in sc._hoppings:\n    shift = dot(cell,sc.get_lat())\n    hopMAG = hop * exp(1J*factor*(X[j] - shift[0] + X[i])*(Y[j] - shift[1] - Y[i]))\n    scMAG.set_hop(hopMAG,i,j,cell)\nYa que tenemos todos los hoppings definidos, sacamos la supercelda de la copia.\nscMAG = scMAG.cut_piece(1,0)\nscMAG.visualize(0,1)\nYa hecho esto, graficamos la estructura de bandas. Graficamos las bandas de las estructuras con y sin campo magnético para comparar.\nk = linspace(0,1,1000)\nEkMAG = scMAG.solve_all(k)\nEk = sc.solve_all(k)\n# Bandas campo magnético\nplot(k,EkMAG.T,c = \"k\",alpha = 0.4)\n#Bandas sin campo magnético\nplot(k,Ek.T,c = \"r\",alpha = 0.2)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Implementación del campo magnético</span>"
    ]
  },
  {
    "objectID": "clase4.html#visualización-de-los-niveles-de-energía",
    "href": "clase4.html#visualización-de-los-niveles-de-energía",
    "title": "7  Implementación del campo magnético",
    "section": "",
    "text": "Normas usuales del potencial vector\n\n\n\nOtras normas usuales para el potencial vector son \\(\\vec{A} = (0,Bx,0)\\) o \\(\\vec{A} = (-By,0,0)\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\nElección del potencial vector\n\n\n\nA la hora de elegir el potencial vector debemos tener cuidado con que este cumpla las condiciones de frontera. Por ejemplo, si el sistema es periódico en \\(x\\), el potencial vector debe ser periódico en \\(x\\).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPeriodicidad en eje Y\n\n\n\nDe haber tomado la periodicidad en el eje Y con este potencial, habríamos visto que el cálculo no hubier funcionado.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Implementación del campo magnético</span>"
    ]
  },
  {
    "objectID": "clase5.html",
    "href": "clase5.html",
    "title": "8  Modelo SSH",
    "section": "",
    "text": "En este clase se implementará el modelo de Su–Schrieffer–Heeger (modelo SSH) y se estudiarán sus propiedades topológicas. Como se hizo en las clases pasadas, todo se hará con la librería Python TB.\n\nfrom pythtb import * \nfrom pylab import *\n\nSe definen parámetros para tener gráficas de tamaño óptimo.\n\nplt.rcParams['figure.figsize'] = [6,6]\n\nEl modelo SSH es una cadena unidimensional. Por ello, basta definir un único vector de red base.\n\na = 1\na1 = array([a])\n\nlat = array([a1])\n# Sitios en términos del coeficiente que mutlplica a a1. Hay que definir sitio A y sitio B.\nsitioA = array([1/4])\nsitioB = array([3/4])\n\n# Se usa un orbital por sitio.\norb = array([sitioA,sitioB])\n\n# Se define el modelo\nSSH = tb_model(1,1,lat,orb)\n\n# Añadimos los hoppings\nv = 1\nw = 1.5\n\n# Hoppings intracelda\nSSH.set_hop(v,0,1,[0])\n#Hoppings intercelda\nSSH.set_hop(w,0,1,[-1])\n\nVisualizamos nuestra red.\n\nSSH.visualize(0)\n\n\n\n\n\n\n\n\nVeamos los niveles de energía en el caso cuando el sistema es finito con \\(n_{\\text{rep}}\\) sitios. Además, añadimos condiciones de frontera periódicas (sitio \\(i  = 1\\) es igual al sitio \\(i = N\\).) Esto se consigue creando una supercelda con el parámetro glue_edgs puesto en True.\n\n# Se define la supercelda\nnrep = 10 \nsc = SSH.cut_piece(nrep,0,glue_edgs  = True)\n\n# Visualizamos el sistema.\nsc.visualize(0)\n\n# Obtenemos las energías\nE = sc.solve_all()\n\n\n\n\n\n\n\n\nPara graficar, usamos un truco: graficamos con barras de error.\n\n\"\"\" El zeros_like y el E nos grafican puntos de la forma\n (0,E). El xerr nos define las barcas de error.\n El fmt = ' ' hace que no aparezcan los puntos \n graficados y sólo haya barras de error. El \n parámetro alpha permite notar la presencia\n de degeneraciones. \"\"\"\nerrorbar(zeros_like(E),E,xerr = ones_like(E),fmt = ' ', alpha = 0.2)\n\n\n\n\n\n\n\n\nTambién podemos estudiar el llenado de los niveles. En esta supercelda tenemos \\(2\\cdot n_{\\text{rep}}\\) sitios. Asumimos que hay un electrón por orbital a repartir en los niveles de energía. Asumimos que hay un grado dde libertad de spin. De esta forma, siempre se llenarán \\(n_{\\text{rep}}\\) niveles.\nPodemos ver el caso no periódico. En este caso, se rompen muchas degeneraciones y aparecen muchos más niveles.\n\n# Se define la supercelda\nscnp = SSH.cut_piece(nrep,0,glue_edgs  = False)\n\n# Visualizamos el sistema.\nscnp.visualize(0)\n\n# Obtenemos las energías\nEnp = scnp.solve_all()\n\n\n\n\n\n\n\n\n\nerrorbar(zeros_like(Enp),Enp,xerr = ones_like(Enp),fmt = ' ',alpha = 0.2)\n\n\n\n\n\n\n\n\nTambién, visualizamos los estados. Para ello, obtenemos los eigenvectores.\n\nE,U = sc.solve_all(eig_vectors = True)\n\nPythonTB regresa los eigenvectores por reglones de U. Entonces, la entrada i de U será el eigenvector con el eigenvalor correspondiente a la entrada i de E.\n\n# Por ejemplo, el vector U[0] es el asociado al eigenvalor E[0]\nU[0]\n# Cada entrada del vector U[0] es el coeficiente que multiplica al orbital de cada sitio. \n\narray([-0.2236068+0.j,  0.2236068+0.j, -0.2236068+0.j,  0.2236068+0.j,\n       -0.2236068+0.j,  0.2236068+0.j, -0.2236068+0.j,  0.2236068+0.j,\n       -0.2236068+0.j,  0.2236068+0.j, -0.2236068+0.j,  0.2236068+0.j,\n       -0.2236068+0.j,  0.2236068+0.j, -0.2236068+0.j,  0.2236068+0.j,\n       -0.2236068+0.j,  0.2236068+0.j, -0.2236068+0.j,  0.2236068+0.j])\n\n\nDe la forma de \\(U\\), podemos extraer el número de niveles y orbitales.\n\nnlevels, norbs = shape(U)\n\nGraficamos una gráfica de barras que nos diga el coeificente asociado a cada orbital. Para el nivel más bajo, vemos que el estado se distrbiuye entre todos los orbitales.\n\nbar(range(norbs),U[0]*conj(U[0]))\n\n/Users/diegobautistaaviles/anaconda3/envs/pythontb/lib/python3.12/site-packages/matplotlib/cbook.py:1699: ComplexWarning:\n\nCasting complex values to real discards the imaginary part\n\n/Users/diegobautistaaviles/anaconda3/envs/pythontb/lib/python3.12/site-packages/matplotlib/transforms.py:766: ComplexWarning:\n\nCasting complex values to real discards the imaginary part\n\n\n\n\n\n\n\n\n\n\n\nbar(range(norbs),U[1]*conj(U[1]))\n\n\n\n\n\n\n\n\nVemos que en el caso con condiciones no periódicas hay estados que se concentran en los borde.s\n\nEnp,Unp = scnp.solve_all(eig_vectors = True)\n\nnlevelsnp, norbsnp = shape(Unp)\n\n\nbar(range(norbsnp),Unp[0]*conj(Unp[0]))\n\n\n\n\n\n\n\n\n\nnb = nlevelsnp//2 - 1\n\nbar(range(norbs),Unp[nb]*conj(Unp[nb]))\n\n\n\n\n\n\n\n\nAhora, analicemos la quiralidad del problema. Para ello introducimos el operador de quiralidad \\(\\Sigma = \\sum_{n = 1}^{N}\\sigma_{z}\\):\n\nσz = array([[1,0],[0,-1]])\n\nID = diag(ones(nrep))\n\nΣ = kron(ID,σz)\n\nDe acuerdo a la teoría, el valor esperado del operador de quiralidad debe ser \\(0\\):\n\nvdot( Unp[0] ,dot(Σ,Unp[0]))\n\n(-5.551115123125783e-17+0j)\n\n\nTambién, calculamos el IPR: \\[\\text{IPR}(E) = \\sum_{\\text{site}} |U(\\vec{r}_{\\text{site}})|^{4}\\]\n\nIPR = real(sum(U*conj(Unp)*U*conj(Unp), axis = 1))\n\nPodemos usar el IPR como coloración de los niveles de energía.\n\n# Obtenemos una escala de colores. \ncmap = matplotlib.colormaps.get_cmap(\"Blues\")\n# Tomamos los valores de IPR normalizados.\nvalores = IPR/IPR.max()\n\nrgba = cmap(valores)\n\nerrorbar(zeros_like(Enp),Enp,xerr = ones_like(Enp),fmt = ' ', ecolor = rgba)\nscatter(zeros_like(Enp),Enp,c = valores, cmap = \"Blues\")\ncolorbar()",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Modelo SSH</span>"
    ]
  },
  {
    "objectID": "clase6.html",
    "href": "clase6.html",
    "title": "9  Modelo SSH con condiciones de frontera periódicas",
    "section": "",
    "text": "Ahora estudiaremos el modelo en el caso en que tenemos condiciones de frontera periódicas, de modo que es posible definir el espacio recíproco.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Modelo SSH con condiciones de frontera periódicas</span>"
    ]
  }
]